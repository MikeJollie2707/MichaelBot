{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MichaelBot's documentation Table of Contents Welcome to MichaelBot's documentation Introduction Convention Parameters Permissions Prefix User/Member Concept Cooldown Introduction This is the official documentation for MichaelBot. This can be used as a developer documentation or user documentation. If you want to invite the bot, you won't be able to, yet. You can however, ask MikeJollie#1067 to invite the bot via MichaelBot support server . Convention These are the conventions I use throughout this document: Parameters parameter : Required parameter. The bot will raise error without this parameter . [parameter] : Optional parameter. The bot can still works without this parameter . param1/param2/... or [param1/param2/...] : You can provide either param style. The accuracy is in descending order . Example: if it's profile [mention/ID/name/nickname] , means you can, optionally, provide either the mention, the id or the name/nickname of the user. Using mention or id will provide more accuracy than name/nickname . If the parameter has space, use \"this is considered a param\" to make it a param. Example: if it's profile [mention/ID/name/nickname] and the name is Hello World then you will use profile \"Hello World\" . Using profile Hello World will most likely raise error . Permissions You need : The required permission you need to have to execute the command. I need : The required permission the bot need to have to execute the command. This document will asssume the bot has Send Messages and Read Messages in the channel you provoke the command. Prefix This document will assume you know how to provoke a command ~~using prefix command_name ~~. If you don't know the prefix of the bot, use @MichaelBotPy prefix or use the bot's mention as the prefix (not recommended). The default prefix is $ ~~no it doesn't have $sudo~~. User/Member Concept When this document refers to \"user\" , it refers to a Discord user regardless of the server . When this document refers to \"member\" , it refers to a Discord user in a certain server(s) . The difference will be clarified later on in this document. Note that Discord API doesn't allow bot to get information about a user/member if the bot does not see the user/member , which means the bot needs to share at least 1 server with the user/member to actually work. Cooldown The convention for cooldown syntax in this doc (and help ) is x seconds per n use(s) (cooldown type) . x : The cooldown duration before you can use the command. n : The number of times the command is used before invoking the cooldown. cooldown type : There are usually 4 types of cooldown in this bot: global : The cooldown applies to every servers the bot joins. Example: If a person invokes prefix n times, no one can invoke prefix again until x seconds are passed. guild : The cooldown applies to everyone in a certain server . Example: If a person invokes kick n times, no one in that person's server can invoke kick again until x seconds are passed. user : The cooldown applies to that certain user . Example: If the user MikeJollie invoke embed_simple n times, that certain user can not invoke embed_simple again until x seconds are passed. member : The cooldown applies to that certain member . Example: If the member MikeJollie invoke test n times, that certain member can not invoke MikeJollie in the same server he invoked again until x seconds are passed. He can invoke the command in a different server in that duration however .","title":"Home"},{"location":"#welcome-to-michaelbots-documentation","text":"","title":"Welcome to MichaelBot's documentation"},{"location":"#table-of-contents","text":"Welcome to MichaelBot's documentation Introduction Convention Parameters Permissions Prefix User/Member Concept Cooldown","title":"Table of Contents"},{"location":"#introduction","text":"This is the official documentation for MichaelBot. This can be used as a developer documentation or user documentation. If you want to invite the bot, you won't be able to, yet. You can however, ask MikeJollie#1067 to invite the bot via MichaelBot support server .","title":"Introduction"},{"location":"#convention","text":"These are the conventions I use throughout this document:","title":"Convention"},{"location":"#parameters","text":"parameter : Required parameter. The bot will raise error without this parameter . [parameter] : Optional parameter. The bot can still works without this parameter . param1/param2/... or [param1/param2/...] : You can provide either param style. The accuracy is in descending order . Example: if it's profile [mention/ID/name/nickname] , means you can, optionally, provide either the mention, the id or the name/nickname of the user. Using mention or id will provide more accuracy than name/nickname . If the parameter has space, use \"this is considered a param\" to make it a param. Example: if it's profile [mention/ID/name/nickname] and the name is Hello World then you will use profile \"Hello World\" . Using profile Hello World will most likely raise error .","title":"Parameters"},{"location":"#permissions","text":"You need : The required permission you need to have to execute the command. I need : The required permission the bot need to have to execute the command. This document will asssume the bot has Send Messages and Read Messages in the channel you provoke the command.","title":"Permissions"},{"location":"#prefix","text":"This document will assume you know how to provoke a command ~~using prefix command_name ~~. If you don't know the prefix of the bot, use @MichaelBotPy prefix or use the bot's mention as the prefix (not recommended). The default prefix is $ ~~no it doesn't have $sudo~~.","title":"Prefix"},{"location":"#usermember-concept","text":"When this document refers to \"user\" , it refers to a Discord user regardless of the server . When this document refers to \"member\" , it refers to a Discord user in a certain server(s) . The difference will be clarified later on in this document. Note that Discord API doesn't allow bot to get information about a user/member if the bot does not see the user/member , which means the bot needs to share at least 1 server with the user/member to actually work.","title":"User/Member Concept"},{"location":"#cooldown","text":"The convention for cooldown syntax in this doc (and help ) is x seconds per n use(s) (cooldown type) . x : The cooldown duration before you can use the command. n : The number of times the command is used before invoking the cooldown. cooldown type : There are usually 4 types of cooldown in this bot: global : The cooldown applies to every servers the bot joins. Example: If a person invokes prefix n times, no one can invoke prefix again until x seconds are passed. guild : The cooldown applies to everyone in a certain server . Example: If a person invokes kick n times, no one in that person's server can invoke kick again until x seconds are passed. user : The cooldown applies to that certain user . Example: If the user MikeJollie invoke embed_simple n times, that certain user can not invoke embed_simple again until x seconds are passed. member : The cooldown applies to that certain member . Example: If the member MikeJollie invoke test n times, that certain member can not invoke MikeJollie in the same server he invoked again until x seconds are passed. He can invoke the command in a different server in that duration however .","title":"Cooldown"},{"location":"core/","text":"Core commands These are commands that are mostly related to information. Table of Contents changelog help info note [DEPRECATED] prefix [DEPRECATED] profile report serverinfo changelog Show the latest 10 changes of the bot. Full Signature: @commands.command() @commands.bot_has_permissions(read_message_history = True, add_reactions = True, send_messages = True) async def changelog(self, ctx): Simplified Signature: changelog Example: $changelog Expected Output: an embed with reactions to navigate help Show compact help about a command or a category. Note that the command name and category name is case sensitive. Full Signature: @commands.command() @commands.bot_has_permissions(read_message_history = True, add_reactions = True, send_messages = True) async def help(self, ctx, categoryOrcommand = ): Simplified Signature: help [category/command] Parameters: category/command : The category's name or the command's name or the command's aliases. Examples: Example 1: $help Core Example 2: $help info Example 3: $help Expected Output: Example 1: an embed with reactions to navigate Example 2: an embed with information Example 3: an embed with reactions to select info Provide information about the bot. Full Signature: @commands.command() @commands.bot_has_permissions(send_messages = True) async def info(self, ctx): Simplified Signature: info Example: $info Expected Output: an embed with information note [DEPRECATED] This command has been labeled as [DEPRECATED], which means it's possible to be removed in the future. This section is incomplete, will be updated in the future. prefix [DEPRECATED] This command has been labeled as [DEPRECATED], which means it's possible to be removed in the future. View and set the prefix for the bot. Full Signature: @commands.command() @commands.has_permissions(manage_guild = True) @commands.bot_has_permissions(send_messages = True) @commands.cooldown(rate = 1, per = 5.0, type = commands.BucketType.default) async def prefix(self, ctx, new_prefix : str = None): Simplified Signature: prefix [new_prefix] Parameters: new_prefix : The new prefix for the bot. I recommend to set it 1-4 characters with no spaces. Example: $prefix ! Expected Output: New prefix: ! profile Provide information about you or another member. Full Signature: @commands.command() @commands.bot_has_permissions(send_messages = True) async def profile(self, ctx, member: discord.Member = None): Simplified Signature: profile [ID/mention/name/nickname] Parameter: member : A Discord member. It can be any in the following form: [ID/discriminator/mention/name/nickname] Examples: Example 1: $profile 472832990012243969 (recommended if you turn Developer Mode) Example 2: $profile MikeJollie#1067 (recommended for normal uses) Example 3: $profile Expected Output: an embed with information report Report a bug or suggest new features for the bot. Full Signature: @commands.command() @commands.bot_has_permissions(manage_messages = True, send_messages = True) @commands.cooldown(rate = 1, per = 30.0, type = commands.BucketType.user) async def report(self, ctx, *, content : str): Simplified Signature: report type content Parameters: type : Either report or suggest , based on your need. It is recommended to use the correct label for the report/suggestion to be easily viewed. content : The report/suggestion. Examples: Example 1: $report report The command xyz raise error (full error here...) Example 2: $report suggest The command profile should have this feature (feature here...) Expected Output: Your opinion has been sent. serverinfo Provide information about the server that invoke the command. Full Signature: @commands.command(aliases = [ server-info ]) @commands.bot_has_permissions(send_messages = True) async def serverinfo(self, ctx): Simplified Signature: serverinfo server-info Example: $serverinfo Expected Output: an embed with information This document is last updated on April 18th (PT) by MikeJollie#1067","title":"Core"},{"location":"core/#core-commands","text":"These are commands that are mostly related to information.","title":"Core commands"},{"location":"core/#table-of-contents","text":"changelog help info note [DEPRECATED] prefix [DEPRECATED] profile report serverinfo","title":"Table of Contents"},{"location":"core/#changelog","text":"Show the latest 10 changes of the bot. Full Signature: @commands.command() @commands.bot_has_permissions(read_message_history = True, add_reactions = True, send_messages = True) async def changelog(self, ctx): Simplified Signature: changelog Example: $changelog Expected Output: an embed with reactions to navigate","title":"changelog"},{"location":"core/#help","text":"Show compact help about a command or a category. Note that the command name and category name is case sensitive. Full Signature: @commands.command() @commands.bot_has_permissions(read_message_history = True, add_reactions = True, send_messages = True) async def help(self, ctx, categoryOrcommand = ): Simplified Signature: help [category/command] Parameters: category/command : The category's name or the command's name or the command's aliases. Examples: Example 1: $help Core Example 2: $help info Example 3: $help Expected Output: Example 1: an embed with reactions to navigate Example 2: an embed with information Example 3: an embed with reactions to select","title":"help"},{"location":"core/#info","text":"Provide information about the bot. Full Signature: @commands.command() @commands.bot_has_permissions(send_messages = True) async def info(self, ctx): Simplified Signature: info Example: $info Expected Output: an embed with information","title":"info"},{"location":"core/#note-deprecated","text":"This command has been labeled as [DEPRECATED], which means it's possible to be removed in the future. This section is incomplete, will be updated in the future.","title":"note [DEPRECATED]"},{"location":"core/#prefix-deprecated","text":"This command has been labeled as [DEPRECATED], which means it's possible to be removed in the future. View and set the prefix for the bot. Full Signature: @commands.command() @commands.has_permissions(manage_guild = True) @commands.bot_has_permissions(send_messages = True) @commands.cooldown(rate = 1, per = 5.0, type = commands.BucketType.default) async def prefix(self, ctx, new_prefix : str = None): Simplified Signature: prefix [new_prefix] Parameters: new_prefix : The new prefix for the bot. I recommend to set it 1-4 characters with no spaces. Example: $prefix ! Expected Output: New prefix: !","title":"prefix [DEPRECATED]"},{"location":"core/#profile","text":"Provide information about you or another member. Full Signature: @commands.command() @commands.bot_has_permissions(send_messages = True) async def profile(self, ctx, member: discord.Member = None): Simplified Signature: profile [ID/mention/name/nickname] Parameter: member : A Discord member. It can be any in the following form: [ID/discriminator/mention/name/nickname] Examples: Example 1: $profile 472832990012243969 (recommended if you turn Developer Mode) Example 2: $profile MikeJollie#1067 (recommended for normal uses) Example 3: $profile Expected Output: an embed with information","title":"profile"},{"location":"core/#report","text":"Report a bug or suggest new features for the bot. Full Signature: @commands.command() @commands.bot_has_permissions(manage_messages = True, send_messages = True) @commands.cooldown(rate = 1, per = 30.0, type = commands.BucketType.user) async def report(self, ctx, *, content : str): Simplified Signature: report type content Parameters: type : Either report or suggest , based on your need. It is recommended to use the correct label for the report/suggestion to be easily viewed. content : The report/suggestion. Examples: Example 1: $report report The command xyz raise error (full error here...) Example 2: $report suggest The command profile should have this feature (feature here...) Expected Output: Your opinion has been sent.","title":"report"},{"location":"core/#serverinfo","text":"Provide information about the server that invoke the command. Full Signature: @commands.command(aliases = [ server-info ]) @commands.bot_has_permissions(send_messages = True) async def serverinfo(self, ctx): Simplified Signature: serverinfo server-info Example: $serverinfo Expected Output: an embed with information This document is last updated on April 18th (PT) by MikeJollie#1067","title":"serverinfo"},{"location":"dev/","text":"","title":"Dev"},{"location":"events/","text":"","title":"Bot events"},{"location":"experiment/","text":"","title":"Experiment"},{"location":"logger/","text":"","title":"Logging events"},{"location":"moderation/","text":"","title":"Moderation"},{"location":"music/","text":"","title":"Music"},{"location":"server/","text":"","title":"Settings"},{"location":"utility/","text":"","title":"Utility"}]}
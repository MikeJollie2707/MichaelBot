{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MichaelBot's documentation Table of Contents Introduction Convention Parameters Discord Objects User/Member Concept Prefix Permissions Cooldown Introduction This is the official documentation for MichaelBot. This can be used as a developer documentation or user documentation. If you want to invite the bot, you won't be able to, yet. You can however, ask MikeJollie#1067 to invite the bot via MichaelBot support server . The source of the bot is available publicly on GitHub . Convention The conventions in this document should be relatively straightforward. The conventions uses in help is a bit less clear, due to not having enough spaces. These are the conventions I use in the help command: Parameters These are the parameter types you will find in the Usage section. <parameter> : Required parameter. The bot will raise error without this parameter . [parameter] : Optional parameter. The bot can still works without this parameter . <param1/param2/...> or [param1/param2/...] : You can provide either param style. If the parameter has space, use \"double quotes\" to make it a param. Example: if it's profile [mention/ID/name/nickname] and the name is Hello World then you will use profile \"Hello World\" . Discord Objects <member> or <user> or <channel> or <guild> are Discord related argument. It is the equivalent of <ID/discrimination/mention/name/nickname> . It is recommended to provide either ID or discrimination (ex: UserName#1234) for absolute accuracy. Providing name or nickname might make the command work not as intended. User/Member Concept User/Member are usually confused terms for a Discord user, but here are the difference. When this document refers to \"user\" , it refers to a Discord user regardless of the server . When this document refers to \"member\" , it refers to a Discord user in a certain server(s) . Note that Discord API doesn't allow bot to get information about a user/member if the bot does not see the user/member , which means the bot needs to share at least 1 server with the user/member to actually work. Prefix This document will assume you know how to use a command using <prefix><command_name> . If you don't know the prefix of the bot, use the bot's mention as the prefix (not recommended) and invoke the prefix command to view the current prefix for the guild. The default prefix is $ when the bot joins a guild, but no it doesn't have $sudo. Permissions The convention for permissions in help is as follow: You need : The required permission you need to have to execute the command. I need : The required permission the bot need to have to execute the command. I will assume the bot always has Send Messages and Read Messages in the channel you use the command. Usually, the bot also needs Read Message History for many commands. Cooldown The convention for cooldown syntax in help is x seconds per n use(s) (cooldown type) . x : The cooldown duration before you can use the command. n : The number of times the command is used before invoking the cooldown. cooldown type : There are usually 4 types of cooldown in this bot: global : The cooldown applies to every servers the bot joins. Example: If a person invokes prefix n times, no one can invoke prefix again until x seconds are passed. guild : The cooldown applies to everyone in a certain server . Example: If a person invokes kick n times, no one in that person's server can invoke kick again until x seconds are passed. user : The cooldown applies to that certain user . Example: If the user MikeJollie invoke embed_simple n times, that certain user can not invoke embed_simple again until x seconds are passed. member : The cooldown applies to that certain member . Example: If the member MikeJollie invoke test n times, that certain member can not invoke MikeJollie in the same server he invoked again until x seconds are passed. He can invoke the command in a different server in that duration however . This document is last edited on Feb 19th (PT) by MikeJollie#1067","title":"Home"},{"location":"#welcome-to-michaelbots-documentation","text":"","title":"Welcome to MichaelBot's documentation"},{"location":"#table-of-contents","text":"Introduction Convention Parameters Discord Objects User/Member Concept Prefix Permissions Cooldown","title":"Table of Contents"},{"location":"#introduction","text":"This is the official documentation for MichaelBot. This can be used as a developer documentation or user documentation. If you want to invite the bot, you won't be able to, yet. You can however, ask MikeJollie#1067 to invite the bot via MichaelBot support server . The source of the bot is available publicly on GitHub .","title":"Introduction"},{"location":"#convention","text":"The conventions in this document should be relatively straightforward. The conventions uses in help is a bit less clear, due to not having enough spaces. These are the conventions I use in the help command:","title":"Convention"},{"location":"#parameters","text":"These are the parameter types you will find in the Usage section. <parameter> : Required parameter. The bot will raise error without this parameter . [parameter] : Optional parameter. The bot can still works without this parameter . <param1/param2/...> or [param1/param2/...] : You can provide either param style. If the parameter has space, use \"double quotes\" to make it a param. Example: if it's profile [mention/ID/name/nickname] and the name is Hello World then you will use profile \"Hello World\" .","title":"Parameters"},{"location":"#discord-objects","text":"<member> or <user> or <channel> or <guild> are Discord related argument. It is the equivalent of <ID/discrimination/mention/name/nickname> . It is recommended to provide either ID or discrimination (ex: UserName#1234) for absolute accuracy. Providing name or nickname might make the command work not as intended.","title":"Discord Objects"},{"location":"#usermember-concept","text":"User/Member are usually confused terms for a Discord user, but here are the difference. When this document refers to \"user\" , it refers to a Discord user regardless of the server . When this document refers to \"member\" , it refers to a Discord user in a certain server(s) . Note that Discord API doesn't allow bot to get information about a user/member if the bot does not see the user/member , which means the bot needs to share at least 1 server with the user/member to actually work.","title":"User/Member Concept"},{"location":"#prefix","text":"This document will assume you know how to use a command using <prefix><command_name> . If you don't know the prefix of the bot, use the bot's mention as the prefix (not recommended) and invoke the prefix command to view the current prefix for the guild. The default prefix is $ when the bot joins a guild, but no it doesn't have $sudo.","title":"Prefix"},{"location":"#permissions","text":"The convention for permissions in help is as follow: You need : The required permission you need to have to execute the command. I need : The required permission the bot need to have to execute the command. I will assume the bot always has Send Messages and Read Messages in the channel you use the command. Usually, the bot also needs Read Message History for many commands.","title":"Permissions"},{"location":"#cooldown","text":"The convention for cooldown syntax in help is x seconds per n use(s) (cooldown type) . x : The cooldown duration before you can use the command. n : The number of times the command is used before invoking the cooldown. cooldown type : There are usually 4 types of cooldown in this bot: global : The cooldown applies to every servers the bot joins. Example: If a person invokes prefix n times, no one can invoke prefix again until x seconds are passed. guild : The cooldown applies to everyone in a certain server . Example: If a person invokes kick n times, no one in that person's server can invoke kick again until x seconds are passed. user : The cooldown applies to that certain user . Example: If the user MikeJollie invoke embed_simple n times, that certain user can not invoke embed_simple again until x seconds are passed. member : The cooldown applies to that certain member . Example: If the member MikeJollie invoke test n times, that certain member can not invoke MikeJollie in the same server he invoked again until x seconds are passed. He can invoke the command in a different server in that duration however . This document is last edited on Feb 19th (PT) by MikeJollie#1067","title":"Cooldown"},{"location":"installation/","text":"Installation I'd prefer you not to clone this to develop your own bot. The code here is for educational purpose. Nevertheless, I'll still provide you the installation steps. Table of Contents Prerequisite Steps Configure Setup database Install packages Run script Prerequisite It's recommended that you either use Linux or WSL (no idea what this is, but it sounds like Linux inside Windows). Windows instruction is also here, but some might be incorrect because I rarely use it. You need git and python3 (on Windows, it's py -3 ). You should also install pip and virtualenv under python3 . You need PostgreSQL installed and setup (it's pretty complex, and I'm planning to make this optional). Steps Configure Clone this directory. git clone https://github.com/MikeJollie2707/MichaelBot.git Go into folder setup and create a json file (here I use secret.json ). // secret.json { \"token\": \"bot token\", \"host\": \"localhost or wherever you host PostgreSQL\", \"port\": 5432, \"user\": \"username\", \"database\": \"name of the database\", \"password\": \"password\" } In setup , there should also be a config.json file. Open it and fill in necessary information. You can use my bot as the template. // config.json { \"BotIndex\": { \"name\": \"Undecided if optional or not\", \"version\": \"Required\", \"description\": \"Required\", \"prefix\": \"Required\", \"debug\": false, \"secret\": \"secret.json\" } } Setup database Currently this is required. I'm planning to make this optional. You need to have a database created already. It's usually hosted on port 5432. Before running the bot first time, you need to find setupdb.py and run it once so it can create the tables. You only need to do this once, or every time you change the schema. Install packages Next, setup a virtual environment and install the required packages. # Linux python3 -m virtualenv venv source venv/bin/activate python3 -m pip install -r requirement.txt # Windows py -3 -m virtualenv venv .\\venv\\Scripts\\activate.bat pip install -r requirement.txt Finally, run the bot. # Linux python3 bot.py BotIndex # Windows py bot.py BotIndex Run script If you don't like typing python3 bot.py BotIndex all the time when you want to start the bot, there's a script startup.sh (for Linux) and run.ps1 (for Windows Powershell) for convenience. Both of them are currently in setup folder, although it might change. For startup.sh , you can edit MICHAEL_DIR to your current directory, and BOT_INDEX for the bot's index. An absolute path is needed if you plan to put the file to one of the startup application. Mark it executable, and just double click it the next time you want to run. For run.ps1 , just change the $BotIndex , and then open Powershell, run the script using . \".\\run.ps1\" . Current no support for cmd because it can be written by yourself.","title":"Installation"},{"location":"installation/#installation","text":"I'd prefer you not to clone this to develop your own bot. The code here is for educational purpose. Nevertheless, I'll still provide you the installation steps.","title":"Installation"},{"location":"installation/#table-of-contents","text":"Prerequisite Steps Configure Setup database Install packages Run script","title":"Table of Contents"},{"location":"installation/#prerequisite","text":"It's recommended that you either use Linux or WSL (no idea what this is, but it sounds like Linux inside Windows). Windows instruction is also here, but some might be incorrect because I rarely use it. You need git and python3 (on Windows, it's py -3 ). You should also install pip and virtualenv under python3 . You need PostgreSQL installed and setup (it's pretty complex, and I'm planning to make this optional).","title":"Prerequisite"},{"location":"installation/#steps","text":"","title":"Steps"},{"location":"installation/#configure","text":"Clone this directory. git clone https://github.com/MikeJollie2707/MichaelBot.git Go into folder setup and create a json file (here I use secret.json ). // secret.json { \"token\": \"bot token\", \"host\": \"localhost or wherever you host PostgreSQL\", \"port\": 5432, \"user\": \"username\", \"database\": \"name of the database\", \"password\": \"password\" } In setup , there should also be a config.json file. Open it and fill in necessary information. You can use my bot as the template. // config.json { \"BotIndex\": { \"name\": \"Undecided if optional or not\", \"version\": \"Required\", \"description\": \"Required\", \"prefix\": \"Required\", \"debug\": false, \"secret\": \"secret.json\" } }","title":"Configure"},{"location":"installation/#setup-database","text":"Currently this is required. I'm planning to make this optional. You need to have a database created already. It's usually hosted on port 5432. Before running the bot first time, you need to find setupdb.py and run it once so it can create the tables. You only need to do this once, or every time you change the schema.","title":"Setup database"},{"location":"installation/#install-packages","text":"Next, setup a virtual environment and install the required packages. # Linux python3 -m virtualenv venv source venv/bin/activate python3 -m pip install -r requirement.txt # Windows py -3 -m virtualenv venv .\\venv\\Scripts\\activate.bat pip install -r requirement.txt Finally, run the bot. # Linux python3 bot.py BotIndex # Windows py bot.py BotIndex","title":"Install packages"},{"location":"installation/#run-script","text":"If you don't like typing python3 bot.py BotIndex all the time when you want to start the bot, there's a script startup.sh (for Linux) and run.ps1 (for Windows Powershell) for convenience. Both of them are currently in setup folder, although it might change. For startup.sh , you can edit MICHAEL_DIR to your current directory, and BOT_INDEX for the bot's index. An absolute path is needed if you plan to put the file to one of the startup application. Mark it executable, and just double click it the next time you want to run. For run.ps1 , just change the $BotIndex , and then open Powershell, run the script using . \".\\run.ps1\" . Current no support for cmd because it can be written by yourself.","title":"Run script"},{"location":"zutil/","text":"Label templates Copy the text according to the label. Table of Contents [DEPRECATED] [INTERNAL] [INCOMPLETE] [OUTDATED] [EXPERIMENT] [BETA] [DEVELOPING] [DEPRECATED] This section is labeled as [DEPRECATED], which means it's possible to be removed in the future. [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. [INCOMPLETE] This section is labeled as [INCOMPLETE], will be updated in the future. [OUTDATED] This section is labeled as [OUTDATED], will be updated in the future. [EXPERIMENT] This section is labeled as [EXPERIMENT], which means the function/command is currently in internal testing (alpha) and not publicly available. [BETA] This section is labeled as [BETA], which means the function/command is currently in beta testing and possibly publicly available. [DEVELOPING] This section is labeled as [DEVELOPING], which means the function/command is currently under development and not available for testing.","title":"Zutil"},{"location":"zutil/#label-templates","text":"Copy the text according to the label.","title":"Label templates"},{"location":"zutil/#table-of-contents","text":"[DEPRECATED] [INTERNAL] [INCOMPLETE] [OUTDATED] [EXPERIMENT] [BETA] [DEVELOPING]","title":"Table of Contents"},{"location":"zutil/#deprecated","text":"This section is labeled as [DEPRECATED], which means it's possible to be removed in the future.","title":"[DEPRECATED]"},{"location":"zutil/#internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose.","title":"[INTERNAL]"},{"location":"zutil/#incomplete","text":"This section is labeled as [INCOMPLETE], will be updated in the future.","title":"[INCOMPLETE]"},{"location":"zutil/#outdated","text":"This section is labeled as [OUTDATED], will be updated in the future.","title":"[OUTDATED]"},{"location":"zutil/#experiment","text":"This section is labeled as [EXPERIMENT], which means the function/command is currently in internal testing (alpha) and not publicly available.","title":"[EXPERIMENT]"},{"location":"zutil/#beta","text":"This section is labeled as [BETA], which means the function/command is currently in beta testing and possibly publicly available.","title":"[BETA]"},{"location":"zutil/#developing","text":"This section is labeled as [DEVELOPING], which means the function/command is currently under development and not available for testing.","title":"[DEVELOPING]"},{"location":"commands/core/","text":"Core commands These are commands that are mostly related to information. Table of Contents __init__ [INTERNAL] cog_check [INTERNAL] changelog changelog dev help help-all info note [DEPRECATED] prefix profile report serverinfo __init__ [INTERNAL] This section is labeled as [INTERNAL], meaning that is is NOT a command. It is here only to serve the developers purpose. A constructor of the category. This set the Core category's emoji as \u2699\ufe0f . cog_check [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A check that apply to all the command in this category. This check will check if ctx is in private DM or not, and will raise NoPrivateMessage() exception if it is. changelog Show the latest 10 changes of the bot. Usage: <prefix>changelog Example: $changelog You need: None. The bot needs: Read Message History , Add Reactions , Send Messages . Subcommands: dev changelog dev Show the latest 10 changes of the bot behind the scene . Usage: <prefix>changelog dev Example: $changelog dev You need: None. The bot needs: Read Message History , Add Reactions , Send Messages . help Show compact help about a command, or a category. Note: command name and category name is case sensitive; Core is different from core . Usage: <prefix>help [command/category] Parameters: command/category : The category's name or the command's name or the command's aliases. This also includes subcommand. Examples: Example 1: $help Core Example 2: $help info Example 3: $help changelog dev You need: None. The bot needs: Read Message History , Add Reactions , Send Messages . help-all Show help about the bot, a command, or a category. Note: command name and category name is case sensitive; Core is different from core. Usage: <prefix>help-all [command/category] Parameters: category/command : The category's name or the command's name or the command's aliases. This also includes subcommand. Examples: Example 1: $help-all Core Example 2: $help-all info Example 3: $help-all You need: None. The bot needs: Read Message History , Add Reactions , Send Messages . info Provide information about the bot. Usage: <prefix>info Example: $info You need: None. The bot needs: Read Message History , Send Messages . note [DEPRECATED] This section is labeled as [DEPRECATED], which means it's possible to be removed in the future. Provide syntax convention for help and help-all . All it does is putting a link to this documentation. Full Signature: @commands.command() @commands.bot_has_permissions(send_messages = True) async def note(self, ctx): Simplified Signature: note Example: note Expected Output: an embed with a link prefix View and set the prefix for the bot. Usage: <prefix>prefix [new_prefix] Parameter: new_prefix : The new prefix. It is recommended to be somewhere 1-5 characters, and not something common like ! . Cooldown: 10 seconds per 1 use (guild). Examples: Example 1: $prefix Example 2: $prefix % You need: Manage Server . The bot needs: Read Message History , Send Messages . profile Provide information about you or another member. Usage: <prefix>profile [member] Parameter: member : A Discord member. Examples: Example 1: $profile 472832990012243969 (recommended if you turn Developer Mode on) Example 2: $profile MikeJollie#1067 (recommended for normal uses) Example 3: $profile You need: None. The bot needs: Send Messages . report Report a bug or suggest new features for the bot. Usage: <prefix>report <report_type> <content> Parameters: report_type : Either report or suggest , based on your need. It is recommended to use the correct label for the report/suggestion to be easily viewed. content : The report/suggestion. Cooldown: 30 seconds per use (user) Examples: Example 1: $report report The command xyz raise error (full error here...) Example 2: $report suggest The command profile should have this feature (feature here...) You needs: None. The bot need: Manage Messages , Send Messages . serverinfo Provide information about the server that invoke the command. Aliases: server-info Usage: <prefix>serverinfo Example: $serverinfo You need: None. The bot needs: Send Messages . This document is last reviewed on Apr 10th (PT) by MikeJollie#1067","title":"Core"},{"location":"commands/core/#core-commands","text":"These are commands that are mostly related to information.","title":"Core commands"},{"location":"commands/core/#table-of-contents","text":"__init__ [INTERNAL] cog_check [INTERNAL] changelog changelog dev help help-all info note [DEPRECATED] prefix profile report serverinfo","title":"Table of Contents"},{"location":"commands/core/#__init__-internal","text":"This section is labeled as [INTERNAL], meaning that is is NOT a command. It is here only to serve the developers purpose. A constructor of the category. This set the Core category's emoji as \u2699\ufe0f .","title":"__init__ [INTERNAL]"},{"location":"commands/core/#cog_check-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A check that apply to all the command in this category. This check will check if ctx is in private DM or not, and will raise NoPrivateMessage() exception if it is.","title":"cog_check [INTERNAL]"},{"location":"commands/core/#changelog","text":"Show the latest 10 changes of the bot. Usage: <prefix>changelog Example: $changelog You need: None. The bot needs: Read Message History , Add Reactions , Send Messages . Subcommands: dev","title":"changelog"},{"location":"commands/core/#changelog-dev","text":"Show the latest 10 changes of the bot behind the scene . Usage: <prefix>changelog dev Example: $changelog dev You need: None. The bot needs: Read Message History , Add Reactions , Send Messages .","title":"changelog dev"},{"location":"commands/core/#help","text":"Show compact help about a command, or a category. Note: command name and category name is case sensitive; Core is different from core . Usage: <prefix>help [command/category] Parameters: command/category : The category's name or the command's name or the command's aliases. This also includes subcommand. Examples: Example 1: $help Core Example 2: $help info Example 3: $help changelog dev You need: None. The bot needs: Read Message History , Add Reactions , Send Messages .","title":"help"},{"location":"commands/core/#help-all","text":"Show help about the bot, a command, or a category. Note: command name and category name is case sensitive; Core is different from core. Usage: <prefix>help-all [command/category] Parameters: category/command : The category's name or the command's name or the command's aliases. This also includes subcommand. Examples: Example 1: $help-all Core Example 2: $help-all info Example 3: $help-all You need: None. The bot needs: Read Message History , Add Reactions , Send Messages .","title":"help-all"},{"location":"commands/core/#info","text":"Provide information about the bot. Usage: <prefix>info Example: $info You need: None. The bot needs: Read Message History , Send Messages .","title":"info"},{"location":"commands/core/#note-deprecated","text":"This section is labeled as [DEPRECATED], which means it's possible to be removed in the future. Provide syntax convention for help and help-all . All it does is putting a link to this documentation. Full Signature: @commands.command() @commands.bot_has_permissions(send_messages = True) async def note(self, ctx): Simplified Signature: note Example: note Expected Output: an embed with a link","title":"note [DEPRECATED]"},{"location":"commands/core/#prefix","text":"View and set the prefix for the bot. Usage: <prefix>prefix [new_prefix] Parameter: new_prefix : The new prefix. It is recommended to be somewhere 1-5 characters, and not something common like ! . Cooldown: 10 seconds per 1 use (guild). Examples: Example 1: $prefix Example 2: $prefix % You need: Manage Server . The bot needs: Read Message History , Send Messages .","title":"prefix"},{"location":"commands/core/#profile","text":"Provide information about you or another member. Usage: <prefix>profile [member] Parameter: member : A Discord member. Examples: Example 1: $profile 472832990012243969 (recommended if you turn Developer Mode on) Example 2: $profile MikeJollie#1067 (recommended for normal uses) Example 3: $profile You need: None. The bot needs: Send Messages .","title":"profile"},{"location":"commands/core/#report","text":"Report a bug or suggest new features for the bot. Usage: <prefix>report <report_type> <content> Parameters: report_type : Either report or suggest , based on your need. It is recommended to use the correct label for the report/suggestion to be easily viewed. content : The report/suggestion. Cooldown: 30 seconds per use (user) Examples: Example 1: $report report The command xyz raise error (full error here...) Example 2: $report suggest The command profile should have this feature (feature here...) You needs: None. The bot need: Manage Messages , Send Messages .","title":"report"},{"location":"commands/core/#serverinfo","text":"Provide information about the server that invoke the command. Aliases: server-info Usage: <prefix>serverinfo Example: $serverinfo You need: None. The bot needs: Send Messages . This document is last reviewed on Apr 10th (PT) by MikeJollie#1067","title":"serverinfo"},{"location":"commands/currency/","text":"Currency commands [INCOMPLETE] This section is labeled as [INCOMPLETE], will be updated in the future. These are commands that involve fake economy. All items and currencies are shared across guilds. For further guides, refer to this . Table of Contents Table of Contents __init__ [INTERNAL] adventure balance brew recipe (brew) chop craft recipe (craft) daily equip __init__ [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A constructor for this category. This set the Currency category's emoji is \ud83d\udcb2 . adventure This is an activity Go on an adventure to gather materials! Watch out though, you might encounter unwanted enemies. Better bring a sword. Aliases: adv Usage: <prefix>adventure Cooldown: 5 minutes per 1 use (user) Example: $adv You need: None. The bot needs: Use External Emojis , Read Message History , Send Messages . balance Display the amount of money you currently have. Usage: <prefix>balance Cooldown: 2 seconds per 1 use (user) Example: $balance You need: None. The bot needs: Read Message History , Send Messages . brew Brew potions. This command behaves the same way craft does. Usage: <prefix>brew [amount=1] <potion> Parameters: amount : The amount of potion you want to brew. potion : The potion you want to brew. Refer to brew recipe for brewable potions. Examples: Example 1: $brew 2 fire potion Example 2: $brew luck potion You need: None. The bot needs: Use External Emojis , Read Message History , Send Messages . Subcommands: recipe recipe (brew) Show the recipe for one potion or for all potions. Usage: <prefix>brew recipe [potion] Parameters: potion : The potion you want to view. If this is not provided, all potions' recipe will be displayed. Examples: Example 1: $brew recipe Example 2: $brew recipe luck potion You need: None. The bot needs: Use External Emojis , Read Message History , Send Messages . chop This is an activity Chop some trees. The majority of reward is log, although you can also find some other things with a better axe. Usage: <prefix>chop Cooldown: 5 minutes per 1 use (user). Example: $chop You need: None. The bot needs: Use External Emojis , Read Message History , Send Messages . craft Craft up to amount items. The command will repeatedly attempt to craft the item until the pseudo-amount exceed amount , in which it will rollback the latest craft attempt. That will be the final amount of the craft. Usage: <prefix>craft [amount=1] <item> Parameters: amount : The maximum amount of items you'll get. item : The item you want to craft. Refer to craft recipe for craftable items. Examples: Example 1: $craft 2 stick Example 2: $craft wooden pickaxe You need: None. The bot needs: Use External Emojis , Read Message History , Send Messages . Subcommands: recipe recipe (craft) Show the crafting recipe for one item or for all items. Usage: <prefix>craft recipe [item] Parameter: item : The item you want. If this is not provided, the command will show all recipes for all items. Examples: Example 1: $craft recipe Example 2: $craft recipe wood You need: None. The bot needs: Use External Emojis , Read Message History , Send Messages . daily Get an amount of money every 24h. This command's cooldown is hard-coded. You cannot reset it with reset_all_cooldown . Usage: <prefix>daily Cooldown: 1 day per 1 use (user) Example: $daily You need: None. The bot needs: Read Message History , Send Messages . equip Equip a tool. This document is last updated on May 11th (PT) by MikeJollie#1067","title":"Currency"},{"location":"commands/currency/#currency-commands-incomplete","text":"This section is labeled as [INCOMPLETE], will be updated in the future. These are commands that involve fake economy. All items and currencies are shared across guilds. For further guides, refer to this .","title":"Currency commands [INCOMPLETE]"},{"location":"commands/currency/#table-of-contents","text":"Table of Contents __init__ [INTERNAL] adventure balance brew recipe (brew) chop craft recipe (craft) daily equip","title":"Table of Contents"},{"location":"commands/currency/#__init__-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A constructor for this category. This set the Currency category's emoji is \ud83d\udcb2 .","title":"__init__ [INTERNAL]"},{"location":"commands/currency/#adventure","text":"This is an activity Go on an adventure to gather materials! Watch out though, you might encounter unwanted enemies. Better bring a sword. Aliases: adv Usage: <prefix>adventure Cooldown: 5 minutes per 1 use (user) Example: $adv You need: None. The bot needs: Use External Emojis , Read Message History , Send Messages .","title":"adventure"},{"location":"commands/currency/#balance","text":"Display the amount of money you currently have. Usage: <prefix>balance Cooldown: 2 seconds per 1 use (user) Example: $balance You need: None. The bot needs: Read Message History , Send Messages .","title":"balance"},{"location":"commands/currency/#brew","text":"Brew potions. This command behaves the same way craft does. Usage: <prefix>brew [amount=1] <potion> Parameters: amount : The amount of potion you want to brew. potion : The potion you want to brew. Refer to brew recipe for brewable potions. Examples: Example 1: $brew 2 fire potion Example 2: $brew luck potion You need: None. The bot needs: Use External Emojis , Read Message History , Send Messages . Subcommands: recipe","title":"brew"},{"location":"commands/currency/#recipe-brew","text":"Show the recipe for one potion or for all potions. Usage: <prefix>brew recipe [potion] Parameters: potion : The potion you want to view. If this is not provided, all potions' recipe will be displayed. Examples: Example 1: $brew recipe Example 2: $brew recipe luck potion You need: None. The bot needs: Use External Emojis , Read Message History , Send Messages .","title":"recipe (brew)"},{"location":"commands/currency/#chop","text":"This is an activity Chop some trees. The majority of reward is log, although you can also find some other things with a better axe. Usage: <prefix>chop Cooldown: 5 minutes per 1 use (user). Example: $chop You need: None. The bot needs: Use External Emojis , Read Message History , Send Messages .","title":"chop"},{"location":"commands/currency/#craft","text":"Craft up to amount items. The command will repeatedly attempt to craft the item until the pseudo-amount exceed amount , in which it will rollback the latest craft attempt. That will be the final amount of the craft. Usage: <prefix>craft [amount=1] <item> Parameters: amount : The maximum amount of items you'll get. item : The item you want to craft. Refer to craft recipe for craftable items. Examples: Example 1: $craft 2 stick Example 2: $craft wooden pickaxe You need: None. The bot needs: Use External Emojis , Read Message History , Send Messages . Subcommands: recipe","title":"craft"},{"location":"commands/currency/#recipe-craft","text":"Show the crafting recipe for one item or for all items. Usage: <prefix>craft recipe [item] Parameter: item : The item you want. If this is not provided, the command will show all recipes for all items. Examples: Example 1: $craft recipe Example 2: $craft recipe wood You need: None. The bot needs: Use External Emojis , Read Message History , Send Messages .","title":"recipe (craft)"},{"location":"commands/currency/#daily","text":"Get an amount of money every 24h. This command's cooldown is hard-coded. You cannot reset it with reset_all_cooldown . Usage: <prefix>daily Cooldown: 1 day per 1 use (user) Example: $daily You need: None. The bot needs: Read Message History , Send Messages .","title":"daily"},{"location":"commands/currency/#equip","text":"Equip a tool. This document is last updated on May 11th (PT) by MikeJollie#1067","title":"equip"},{"location":"commands/dev/","text":"Dev commands These are the commands that are only for the bot developers to use ~~to abuse power~~. Table of Contents is_dev [INTERNAL] __init__ [INTERNAL] cog_check [INTERNAL] addmoney all_guild rmvmoney leave_guild reload reload_eh [INTERNAL] reload_all_extension reload_all_error [INTERNAL] report_response reset_all_cooldown shutdown is_dev [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. This is a check to see if the invoker is a developer. This applies to every single command in this category, plus any checks that the command might have. __init__ [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A constructor of the category. cog_check [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A check that apply to all the command in this category. This check will check if is_dev(ctx.author) and isDM(ctx.channel) , raising CheckFailure() and NoPrivateMessage() respectively. addmoney Add an amount of money to a user. Usage: <prefix>addmoney <amount> <user> Parameter: amount : The amount of money you want to add. user : The user you want to add the money. Example: $addmoney 1000 MikeJollie You need: None. The bot need: Read Message History , Send Messages . all_guild Display all guilds the bot is in. Usage: <prefix>all_guild Example: $all_guild You need: None. The bot needs: Read Message History , Send Messages . rmvmoney Remove an amount of money from the user. Usage: <prefix>rmvmoney <amount> <user> Parameter: amount : The amount of money you want to remove. If larger than the member's actual money, the money remain will be 0. user : The member you want to remove the money. Example: $rmvmoney 1000 MikeJollie You need: None. The bot need: Read Message History , Send Messages . leave_guild Make the bot leave the current invoked guild (so you can save yourself from clicking the kick button). Usage: <prefix>leave_guild Example: $leave_guild You need: Owner of the guild. The bot needs: Read Message History , Send Messages . reload Reload a module. This is extremely useful when you don't want to shut down the bot, but still want the update to arrive. Note that by reloading the module, the categories order in help will be changed. Usage: <prefix>reload <module> Parameter: module : The full module name. Cooldown: 5 seconds per 1 use (global) Example: $reload categories.dev You need: None. The bot needs: Read Message History , Send Messages . reload_eh [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A local error handler for the reload command. It is currently only response to the ModuleNotFound exception. reload_all_extension Reload all modules. Useful for OCD people (like MikeJollie) because reload will mess up the order in help and help-all . Usage: <prefix>reload_all_extension Cooldown: 5 seconds per 1 use (global) Example: $reload_all_extension You need: None. The bot needs: Read Message History , Send Messages . reload_all_error [INTERNAL] A local error handler for the reload_all_extension command. It is currently doing nothing. report_response Response to a report/suggestion. Note that the command will look through the last 100 messages in the report channel in the support server. It is recommended not to use this more than once on the same report/suggestion. Aliases: suggest_response Usage: <prefix>report_response <message ID> <response> Parameters: message ID : The message ID of the report. response : The response itself. Cooldown: 60 seconds per 1 use (global) Example: $report_response 649139994270892033 Nah You need: None. The bot needs: Send Messages . reset_all_cooldown Reset all cooldowns on every commands. Usage: <prefix>reset_all_cooldown Example: $reset_all_cooldown You need: None. The bot needs: Send Messages . shutdown A formal way to disconnect the bot from Discord. Usage: <prefix>shutdown Example: $cooldown You need: None. The bot need: Send Messages . This document is last updated on Feb 19th by MikeJollie#1067","title":"Dev"},{"location":"commands/dev/#dev-commands","text":"These are the commands that are only for the bot developers to use ~~to abuse power~~.","title":"Dev commands"},{"location":"commands/dev/#table-of-contents","text":"is_dev [INTERNAL] __init__ [INTERNAL] cog_check [INTERNAL] addmoney all_guild rmvmoney leave_guild reload reload_eh [INTERNAL] reload_all_extension reload_all_error [INTERNAL] report_response reset_all_cooldown shutdown","title":"Table of Contents"},{"location":"commands/dev/#is_dev-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. This is a check to see if the invoker is a developer. This applies to every single command in this category, plus any checks that the command might have.","title":"is_dev [INTERNAL]"},{"location":"commands/dev/#__init__-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A constructor of the category.","title":"__init__ [INTERNAL]"},{"location":"commands/dev/#cog_check-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A check that apply to all the command in this category. This check will check if is_dev(ctx.author) and isDM(ctx.channel) , raising CheckFailure() and NoPrivateMessage() respectively.","title":"cog_check [INTERNAL]"},{"location":"commands/dev/#addmoney","text":"Add an amount of money to a user. Usage: <prefix>addmoney <amount> <user> Parameter: amount : The amount of money you want to add. user : The user you want to add the money. Example: $addmoney 1000 MikeJollie You need: None. The bot need: Read Message History , Send Messages .","title":"addmoney"},{"location":"commands/dev/#all_guild","text":"Display all guilds the bot is in. Usage: <prefix>all_guild Example: $all_guild You need: None. The bot needs: Read Message History , Send Messages .","title":"all_guild"},{"location":"commands/dev/#rmvmoney","text":"Remove an amount of money from the user. Usage: <prefix>rmvmoney <amount> <user> Parameter: amount : The amount of money you want to remove. If larger than the member's actual money, the money remain will be 0. user : The member you want to remove the money. Example: $rmvmoney 1000 MikeJollie You need: None. The bot need: Read Message History , Send Messages .","title":"rmvmoney"},{"location":"commands/dev/#leave_guild","text":"Make the bot leave the current invoked guild (so you can save yourself from clicking the kick button). Usage: <prefix>leave_guild Example: $leave_guild You need: Owner of the guild. The bot needs: Read Message History , Send Messages .","title":"leave_guild"},{"location":"commands/dev/#reload","text":"Reload a module. This is extremely useful when you don't want to shut down the bot, but still want the update to arrive. Note that by reloading the module, the categories order in help will be changed. Usage: <prefix>reload <module> Parameter: module : The full module name. Cooldown: 5 seconds per 1 use (global) Example: $reload categories.dev You need: None. The bot needs: Read Message History , Send Messages .","title":"reload"},{"location":"commands/dev/#reload_eh-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A local error handler for the reload command. It is currently only response to the ModuleNotFound exception.","title":"reload_eh [INTERNAL]"},{"location":"commands/dev/#reload_all_extension","text":"Reload all modules. Useful for OCD people (like MikeJollie) because reload will mess up the order in help and help-all . Usage: <prefix>reload_all_extension Cooldown: 5 seconds per 1 use (global) Example: $reload_all_extension You need: None. The bot needs: Read Message History , Send Messages .","title":"reload_all_extension"},{"location":"commands/dev/#reload_all_error-internal","text":"A local error handler for the reload_all_extension command. It is currently doing nothing.","title":"reload_all_error [INTERNAL]"},{"location":"commands/dev/#report_response","text":"Response to a report/suggestion. Note that the command will look through the last 100 messages in the report channel in the support server. It is recommended not to use this more than once on the same report/suggestion. Aliases: suggest_response Usage: <prefix>report_response <message ID> <response> Parameters: message ID : The message ID of the report. response : The response itself. Cooldown: 60 seconds per 1 use (global) Example: $report_response 649139994270892033 Nah You need: None. The bot needs: Send Messages .","title":"report_response"},{"location":"commands/dev/#reset_all_cooldown","text":"Reset all cooldowns on every commands. Usage: <prefix>reset_all_cooldown Example: $reset_all_cooldown You need: None. The bot needs: Send Messages .","title":"reset_all_cooldown"},{"location":"commands/dev/#shutdown","text":"A formal way to disconnect the bot from Discord. Usage: <prefix>shutdown Example: $cooldown You need: None. The bot need: Send Messages . This document is last updated on Feb 19th by MikeJollie#1067","title":"shutdown"},{"location":"commands/events/","text":"Bot events This section is intentionally left empty due to a full rewrite in near future. This document is last updated on April 23rd (PT) by MikeJollie#1067","title":"Bot events"},{"location":"commands/events/#bot-events","text":"This section is intentionally left empty due to a full rewrite in near future. This document is last updated on April 23rd (PT) by MikeJollie#1067","title":"Bot events"},{"location":"commands/game/","text":"Game commands These are commands that allows you to play small and simple games. Often they reward with money. Table of Contents __init__ [INTERNAL] blackjack [DEVELOPING] minesweeper [DEVELOPING] slots __init__ [INTERNAL] This section is labeled as [INTERNAL], meaning that is is NOT a command. It is here only to serve the developers purpose. A constructor of the category. This set the Core category's emoji as \ud83c\udfae . blackjack [DEVELOPING] This section is labeled as [DEVELOPING], which means the function/command is currently under development and not available for testing. minesweeper [DEVELOPING] This section is labeled as [DEVELOPING], which means the function/command is currently under development and not available for testing. slots Play a slot game! You can win a normal prize, or even a jackpot! However, you can also lose, or even a bigger lose! Shhh! The average chance of winning is 1/9 Usage: <prefix>slots [amount] Parameter: amount : The amount of money to bet. Default to 50 . If you win, you won't lose this money. Example: $slots 100 You need: None. The bot needs: Read Message History , Send Messages . This document is last updated on Feb 20th (PT) by MikeJollie#1067","title":"Game"},{"location":"commands/game/#game-commands","text":"These are commands that allows you to play small and simple games. Often they reward with money.","title":"Game commands"},{"location":"commands/game/#table-of-contents","text":"__init__ [INTERNAL] blackjack [DEVELOPING] minesweeper [DEVELOPING] slots","title":"Table of Contents"},{"location":"commands/game/#__init__-internal","text":"This section is labeled as [INTERNAL], meaning that is is NOT a command. It is here only to serve the developers purpose. A constructor of the category. This set the Core category's emoji as \ud83c\udfae .","title":"__init__ [INTERNAL]"},{"location":"commands/game/#blackjack-developing","text":"This section is labeled as [DEVELOPING], which means the function/command is currently under development and not available for testing.","title":"blackjack [DEVELOPING]"},{"location":"commands/game/#minesweeper-developing","text":"This section is labeled as [DEVELOPING], which means the function/command is currently under development and not available for testing.","title":"minesweeper [DEVELOPING]"},{"location":"commands/game/#slots","text":"Play a slot game! You can win a normal prize, or even a jackpot! However, you can also lose, or even a bigger lose! Shhh! The average chance of winning is 1/9 Usage: <prefix>slots [amount] Parameter: amount : The amount of money to bet. Default to 50 . If you win, you won't lose this money. Example: $slots 100 You need: None. The bot needs: Read Message History , Send Messages . This document is last updated on Feb 20th (PT) by MikeJollie#1067","title":"slots"},{"location":"commands/logger/","text":"Logging events Unlike other categories, this categories only contains logging events for the logging feature of a Discord Bot. This category has no commands. If you're looking for setting up a logging channel/welcome channel/..., refers to page Settings . This section will be reformatted in near future. Table of Contents Format [INTERNAL] LogContent [INTERNAL] __init__ [INTERNAL] append [INTERNAL] __init__ [INTERNAL] log_check [INTERNAL] Events _message_delete _bulk_message_delete [DEVELOPING] _raw_message_edit _message_edit _member_ban _member_unban _member_join _member_leave _member_update _guild_channel_create _guild_channel_delete _guild_channel_update _guild_update _guild_role_create _guild_role_delete _guild_role_update command_error Format [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. This is a set of format that the developers must follow while writing events for consistency. Any changes that does not follow this specification will be denied. Full Specification: # Specification: # Every single events here (except raw events) must have the following variables declared at the very first line after checking log: # - log_channel: the channel that's gonna send the embed. Retrieve using Facility.get_config and config[\"log_channel\"] # - log_title: the log title that's gonna pass in title in discord.Embed # - log_content: the log content that's gonna pass in description in discord.Embed # - log_color: the color of the embed. It must be self.color_... depend on the current event. # - log_time: the timestamp of the embed. Typically get from entry.created_at. # - Optional(executor): the Member that triggered the event. # Log embed specification: # Every single embed send here (except raw events) must have the following format: # Embed.author as the executor. # Embed.title as log_title. # Embed.description as log_content. # Embed.color as log_color. # Embed.timestamp as log_time. # Embed.footer as the executor. # Optional (Embed.thumbnail) as the target. LogContent [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A utility class to help removing the troublesome tabs on mobile. __init__ [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. The constructor. This also optionally set a base content . Full Signature: def __init__(self, msg = \"\"): append [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. Append the content to the current content of this class. By default, this method will add a newline at the end of content . This method returns self to allow chaining. def append(self, *contents): __init__ [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A constructor of the category. This set the emoji for the category as \ud83d\udcdd . This also defines the fixed colors for each audit log action. Any changes that does not follow this specification will be denied. Color Specification: # Color specification: # Moderation action = Black # Warn / Mute = Red # Change (server change, message change, member change, etc.) = Yellow # Delete (delete message, delete role, delete channel, etc.) = Orange # Create (create channel, create role, etc.) = Green # Join / Leave (server) = Blue # Other = Teal self.color_moderation = 0x000000 self.color_warn_mute = discord.Color.red() self.color_change = discord.Color.gold() self.color_delete = discord.Color.orange() self.color_create = discord.Color.green() self.color_guild_join_leave = discord.Color.blue() self.color_other = discord.Color.teal() log_check [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. An internal check if a guild enabled logging feature. It MUST be the first thing to check when writing any events. Full Signature: async def log_check(self, guild): Return: True if config[\"ERROR\"] == 0 and config[\"enable_log\"] == True and config[\"log_channel\"] != 0 False otherwise. Events _message_delete An event that is invoked when a message is deleted if the message is in cache . If the message isn't in cache, _raw_message_delete is invoked instead. If it is a purge, then _bulk_message_delete is invoked instead. If the content of this log exceeds 2000 characters, the content will be put in hastebin.com instead. This event falls under delete in AuditLogActionCategory . The color of the embed is orange. Full Signature: @commands.Cog.listener(\"on_message_delete\") async def _message_delete(self, message): Limitation: The deletor does not always display correctly (due to Discord limitation). _bulk_message_delete [DEVELOPING] This section is labeled as [DEVELOPING], which means the function/command is currently under development and not available for testing. _raw_message_edit An event that is invoked when a message is edited even if the message isn't in cache . If the message is in cache, the event will do nothing and leave the task to _message_edit . This event falls under update in AuditLogActionCategory . The color of the embed is yellow. Full Signature: @commands.Cog.listener(\"on_raw_message_edit\") async def _raw_message_edit(self, payload): Limitation: The old content of the message cannot be found. There is a rare chance that the new content of the message cannot be found. _message_edit An event that is invoked when a message is edited if the message is in cache . If the message isn't in cache, _raw_message_edit is invoked instead. If the logging content exceeds 2000 characters, the content will be put in hastebin.com instead. This event falls under update in AuditLogActionCategory . The color of the embed is yellow. Full Signature: @commands.Cog.listener(\"on_message_edit\") async def _message_edit(self, before, after): Limitation: None . _member_ban An event that is invoked when a user/member is banned. The ban action will also invoke _member_leave if the member is in the guild. The color of the embed is black. Full Signature: @commands.Cog.listener(\"on_member_ban\") async def _member_ban(self, guild, user): Limitation: None _member_unban An event that is invoked when a user is unbanned. The color of the embed is black. Full Signature: @commands.Cog.listener() async def on_member_unban(self, guild, user): Limitation: None _member_join An event that is invoked when a user join the guild. The color of the embed is blue. Full Signature: @commands.Cog.listener(\"on_member_join\") async def _member_join(self, member): Limitation: None _member_leave An event that is invoked when a member leave the guild. This event is also invoked when a member is banned/kicked. The color of the embed is blue. Full Signature: @commands.Cog.listener(\"on_member_leave\") async def _member_remove(self, member): Limitation: When a kicked member rejoin and leave, the member will be logged that the member is kicked twice. _member_update An event that is invoked when a member's role changes, a member's status/activity changes, a member's nickname changes or a member is muted/deafened. This event falls under update in AuditLogActionCategory . The color of the embed is yellow. Full Signature: @commands.Cog.listener(\"on_member_update\") async def _member_update(self, before, after): Limitation: Changes in member's status/activity will not be logged by MichaelBot due to unnecessary spamming. Changes in member is muted/deafened is currently not be logged by MichaelBot due to the unnecessary logging. _guild_channel_create An event that is invoked when a channel in a guild is created. This event falls under create in AuditLogActionCategory . The color of the embed is green. Full Signature: @commands.Cog.listener(\"on_guild_channel_create\") async def _guild_channel_create(self, channel): Limitation: Does not display bitrate information in VoiceChannel . _guild_channel_delete An event that is invoked when a channel in a guild is deleted. This event falls under delete in AuditLogActionCategory . The color of the embed is orange. Full Signature: @commands.Cog.listener(\"on_guild_channel_delete\") async def _guild_channel_delete(self, channel): Limitation: Does not display bitrate information in VoiceChannel . _guild_channel_update An event that is invoked when a channel in a guild is edited. The edit can be either channel's name, channel's topic, channel's position or channel's permission. This event falls under update in AuditLogActionCategory . The color of the embed is yellow. Full Signature: @commands.Cog.listener(\"on_guild_channel_update\") async def _guild_channel_update(self, before, after): Limitation: Changes in channel's position will not be logged by MichaelBot due to both spamming potential and messy Discord internal channel's position definition. _guild_update An event that is invoked when the guild itself is edited. The edit can be either guild's name, guild's avatar or guild's owner. This event falls under update in AuditLogActionCategory . The color of the embed is yellow. Full Signature: @commands.Cog.listener(\"on_guild_update\") async def _guild_update(self, before, after): Limitation: Does not log changes in guild's avatar yet. _guild_role_create An event that is invoked when a role is created. This event falls under create in AuditLogActionCategory . The color of the embed is green. Full Signature: @commands.Cog.listener(\"on_guild_role_create\") async def _guild_role_create(self, role): Limitation: None . _guild_role_delete An event that is invoked when a role is deleted. This event falls under delete in AuditLogActionCategory . The color of the embed is orange. Full Signature: @commands.Cog.listener(\"on_guild_role_delete\") async def _guild_role_delete(self, role): Limitation: Requires View Audit Log permission. _guild_role_update An event that is invoked when a role is edited. The edit can be either role's name changes, role's color changes, role is mentionable changes, role display separately changes or role's permission changes. This event falls under update in AuditLogActionCategory . The color of the embed is yellow. Full Signature: @commands.Cog.listener(\"on_guild_role_update\") async def _guild_role_update(self, before, after): Limitation: Changes in mentionable and displaying separately for role will not be logged by MichaelBot due to unnecessary logging. command_error A listener that listen to on_command_error and display the error to the logging channel. Full Signature: @commands.Cog.listener(\"on_command_error\") async def command_error(self, ctx, error): Limitation: Not user-friendly error message (can't change). If the original message has codeblock, the embed will display ugly. This document is last updated on Feb 19th (PT) by MikeJollie#1067","title":"Logging events"},{"location":"commands/logger/#logging-events","text":"Unlike other categories, this categories only contains logging events for the logging feature of a Discord Bot. This category has no commands. If you're looking for setting up a logging channel/welcome channel/..., refers to page Settings . This section will be reformatted in near future.","title":"Logging events"},{"location":"commands/logger/#table-of-contents","text":"Format [INTERNAL] LogContent [INTERNAL] __init__ [INTERNAL] append [INTERNAL] __init__ [INTERNAL] log_check [INTERNAL] Events _message_delete _bulk_message_delete [DEVELOPING] _raw_message_edit _message_edit _member_ban _member_unban _member_join _member_leave _member_update _guild_channel_create _guild_channel_delete _guild_channel_update _guild_update _guild_role_create _guild_role_delete _guild_role_update command_error","title":"Table of Contents"},{"location":"commands/logger/#format-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. This is a set of format that the developers must follow while writing events for consistency. Any changes that does not follow this specification will be denied. Full Specification: # Specification: # Every single events here (except raw events) must have the following variables declared at the very first line after checking log: # - log_channel: the channel that's gonna send the embed. Retrieve using Facility.get_config and config[\"log_channel\"] # - log_title: the log title that's gonna pass in title in discord.Embed # - log_content: the log content that's gonna pass in description in discord.Embed # - log_color: the color of the embed. It must be self.color_... depend on the current event. # - log_time: the timestamp of the embed. Typically get from entry.created_at. # - Optional(executor): the Member that triggered the event. # Log embed specification: # Every single embed send here (except raw events) must have the following format: # Embed.author as the executor. # Embed.title as log_title. # Embed.description as log_content. # Embed.color as log_color. # Embed.timestamp as log_time. # Embed.footer as the executor. # Optional (Embed.thumbnail) as the target.","title":"Format [INTERNAL]"},{"location":"commands/logger/#logcontent-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A utility class to help removing the troublesome tabs on mobile.","title":"LogContent [INTERNAL]"},{"location":"commands/logger/#__init__-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. The constructor. This also optionally set a base content . Full Signature: def __init__(self, msg = \"\"):","title":"__init__ [INTERNAL]"},{"location":"commands/logger/#append-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. Append the content to the current content of this class. By default, this method will add a newline at the end of content . This method returns self to allow chaining. def append(self, *contents):","title":"append [INTERNAL]"},{"location":"commands/logger/#__init__-internal_1","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A constructor of the category. This set the emoji for the category as \ud83d\udcdd . This also defines the fixed colors for each audit log action. Any changes that does not follow this specification will be denied. Color Specification: # Color specification: # Moderation action = Black # Warn / Mute = Red # Change (server change, message change, member change, etc.) = Yellow # Delete (delete message, delete role, delete channel, etc.) = Orange # Create (create channel, create role, etc.) = Green # Join / Leave (server) = Blue # Other = Teal self.color_moderation = 0x000000 self.color_warn_mute = discord.Color.red() self.color_change = discord.Color.gold() self.color_delete = discord.Color.orange() self.color_create = discord.Color.green() self.color_guild_join_leave = discord.Color.blue() self.color_other = discord.Color.teal()","title":"__init__ [INTERNAL]"},{"location":"commands/logger/#log_check-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. An internal check if a guild enabled logging feature. It MUST be the first thing to check when writing any events. Full Signature: async def log_check(self, guild): Return: True if config[\"ERROR\"] == 0 and config[\"enable_log\"] == True and config[\"log_channel\"] != 0 False otherwise.","title":"log_check [INTERNAL]"},{"location":"commands/logger/#events","text":"","title":"Events"},{"location":"commands/logger/#_message_delete","text":"An event that is invoked when a message is deleted if the message is in cache . If the message isn't in cache, _raw_message_delete is invoked instead. If it is a purge, then _bulk_message_delete is invoked instead. If the content of this log exceeds 2000 characters, the content will be put in hastebin.com instead. This event falls under delete in AuditLogActionCategory . The color of the embed is orange. Full Signature: @commands.Cog.listener(\"on_message_delete\") async def _message_delete(self, message): Limitation: The deletor does not always display correctly (due to Discord limitation).","title":"_message_delete"},{"location":"commands/logger/#_bulk_message_delete-developing","text":"This section is labeled as [DEVELOPING], which means the function/command is currently under development and not available for testing.","title":"_bulk_message_delete [DEVELOPING]"},{"location":"commands/logger/#_raw_message_edit","text":"An event that is invoked when a message is edited even if the message isn't in cache . If the message is in cache, the event will do nothing and leave the task to _message_edit . This event falls under update in AuditLogActionCategory . The color of the embed is yellow. Full Signature: @commands.Cog.listener(\"on_raw_message_edit\") async def _raw_message_edit(self, payload): Limitation: The old content of the message cannot be found. There is a rare chance that the new content of the message cannot be found.","title":"_raw_message_edit"},{"location":"commands/logger/#_message_edit","text":"An event that is invoked when a message is edited if the message is in cache . If the message isn't in cache, _raw_message_edit is invoked instead. If the logging content exceeds 2000 characters, the content will be put in hastebin.com instead. This event falls under update in AuditLogActionCategory . The color of the embed is yellow. Full Signature: @commands.Cog.listener(\"on_message_edit\") async def _message_edit(self, before, after): Limitation: None .","title":"_message_edit"},{"location":"commands/logger/#_member_ban","text":"An event that is invoked when a user/member is banned. The ban action will also invoke _member_leave if the member is in the guild. The color of the embed is black. Full Signature: @commands.Cog.listener(\"on_member_ban\") async def _member_ban(self, guild, user): Limitation: None","title":"_member_ban"},{"location":"commands/logger/#_member_unban","text":"An event that is invoked when a user is unbanned. The color of the embed is black. Full Signature: @commands.Cog.listener() async def on_member_unban(self, guild, user): Limitation: None","title":"_member_unban"},{"location":"commands/logger/#_member_join","text":"An event that is invoked when a user join the guild. The color of the embed is blue. Full Signature: @commands.Cog.listener(\"on_member_join\") async def _member_join(self, member): Limitation: None","title":"_member_join"},{"location":"commands/logger/#_member_leave","text":"An event that is invoked when a member leave the guild. This event is also invoked when a member is banned/kicked. The color of the embed is blue. Full Signature: @commands.Cog.listener(\"on_member_leave\") async def _member_remove(self, member): Limitation: When a kicked member rejoin and leave, the member will be logged that the member is kicked twice.","title":"_member_leave"},{"location":"commands/logger/#_member_update","text":"An event that is invoked when a member's role changes, a member's status/activity changes, a member's nickname changes or a member is muted/deafened. This event falls under update in AuditLogActionCategory . The color of the embed is yellow. Full Signature: @commands.Cog.listener(\"on_member_update\") async def _member_update(self, before, after): Limitation: Changes in member's status/activity will not be logged by MichaelBot due to unnecessary spamming. Changes in member is muted/deafened is currently not be logged by MichaelBot due to the unnecessary logging.","title":"_member_update"},{"location":"commands/logger/#_guild_channel_create","text":"An event that is invoked when a channel in a guild is created. This event falls under create in AuditLogActionCategory . The color of the embed is green. Full Signature: @commands.Cog.listener(\"on_guild_channel_create\") async def _guild_channel_create(self, channel): Limitation: Does not display bitrate information in VoiceChannel .","title":"_guild_channel_create"},{"location":"commands/logger/#_guild_channel_delete","text":"An event that is invoked when a channel in a guild is deleted. This event falls under delete in AuditLogActionCategory . The color of the embed is orange. Full Signature: @commands.Cog.listener(\"on_guild_channel_delete\") async def _guild_channel_delete(self, channel): Limitation: Does not display bitrate information in VoiceChannel .","title":"_guild_channel_delete"},{"location":"commands/logger/#_guild_channel_update","text":"An event that is invoked when a channel in a guild is edited. The edit can be either channel's name, channel's topic, channel's position or channel's permission. This event falls under update in AuditLogActionCategory . The color of the embed is yellow. Full Signature: @commands.Cog.listener(\"on_guild_channel_update\") async def _guild_channel_update(self, before, after): Limitation: Changes in channel's position will not be logged by MichaelBot due to both spamming potential and messy Discord internal channel's position definition.","title":"_guild_channel_update"},{"location":"commands/logger/#_guild_update","text":"An event that is invoked when the guild itself is edited. The edit can be either guild's name, guild's avatar or guild's owner. This event falls under update in AuditLogActionCategory . The color of the embed is yellow. Full Signature: @commands.Cog.listener(\"on_guild_update\") async def _guild_update(self, before, after): Limitation: Does not log changes in guild's avatar yet.","title":"_guild_update"},{"location":"commands/logger/#_guild_role_create","text":"An event that is invoked when a role is created. This event falls under create in AuditLogActionCategory . The color of the embed is green. Full Signature: @commands.Cog.listener(\"on_guild_role_create\") async def _guild_role_create(self, role): Limitation: None .","title":"_guild_role_create"},{"location":"commands/logger/#_guild_role_delete","text":"An event that is invoked when a role is deleted. This event falls under delete in AuditLogActionCategory . The color of the embed is orange. Full Signature: @commands.Cog.listener(\"on_guild_role_delete\") async def _guild_role_delete(self, role): Limitation: Requires View Audit Log permission.","title":"_guild_role_delete"},{"location":"commands/logger/#_guild_role_update","text":"An event that is invoked when a role is edited. The edit can be either role's name changes, role's color changes, role is mentionable changes, role display separately changes or role's permission changes. This event falls under update in AuditLogActionCategory . The color of the embed is yellow. Full Signature: @commands.Cog.listener(\"on_guild_role_update\") async def _guild_role_update(self, before, after): Limitation: Changes in mentionable and displaying separately for role will not be logged by MichaelBot due to unnecessary logging.","title":"_guild_role_update"},{"location":"commands/logger/#command_error","text":"A listener that listen to on_command_error and display the error to the logging channel. Full Signature: @commands.Cog.listener(\"on_command_error\") async def command_error(self, ctx, error): Limitation: Not user-friendly error message (can't change). If the original message has codeblock, the embed will display ugly. This document is last updated on Feb 19th (PT) by MikeJollie#1067","title":"command_error"},{"location":"commands/moderation/","text":"Moderation commands Table of Contents __init__ [INTERNAL] ban ban_eh [INTERNAL] hackban kick kick_eh [INTERNAL] mute [INCOMPLETE] [DEVELOPING] unban These are commands that performs moderating action. __init__ [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A constructor of this category. This set the Moderation category's emoji as \ud83d\udd28 . ban Ban a member in the server. Note that the bot's role needs to be higher than the member to ban. Usage: <prefix>ban <member> [reason] Parameters: member : A Discord member. reason : The reason for banning. Cooldown: 5 seconds per 2 uses (guild). Example: $ban MikeJollie Audam-kun You need: Ban Members . The bot needs: Ban Members , Read Message History , Send Messages . ban_eh [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A local error handler for the ban command. It is currently only response to the BadArgument exception, which signify the user is not in the guild cache. hackban Ban a user out of the server. This user does not need to share the server with the bot. Usage: <prefix>hackban <id> [reason] Parameters: id : The id of the user. reason : The reason for banning. Cooldown: 5 seconds per 2 uses (guild). Example: $hackban 472832990012243969 You have too many lolis You need: Ban Members . The bot needs: Ban Members , Read Message History , Send Messages . kick Kick a member out of the server. Note that the bot's role needs to be higher than the member to kick. Usage: <prefix>kick <member> [reason] Parameters: member : A Discord member. reason : The reason for kicking. Cooldown: 5 seconds per 2 uses (guild). Example: $kick MikeJollie Being dumb You need: Kick Members The bot needs: Kick Members , Read Message History , Send Messages . kick_eh [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A local error handler for the kick command. It is currently only response to the BadArgument exception, which signify that the member is not in the guild. mute [INCOMPLETE] [DEVELOPING] This section is labeled as [INCOMPLETE], will be updated in the future. This section is labeled as [DEVELOPING], which means the function/command is currently under development and not available for testing. Mute a member from chatting. Full Signature: @commands.command(hidden = True, enabled = True) @commands.has_permissions(kick_members = True) @commands.bot_has_guild_permissions(kick_members = True) @commands.cooldown(1, 5.0, commands.BucketType.guild) async def mute(self, ctx, member : discord.Member, *, reason = None): Simplified Signature: mute <member> [reason] Parameters: member : A Discord member. It can be any in the following form: [ID/discriminator/mention/name/nickname] reason : The reason for muting. Example: $mute MikeJollie Stop saying \"Loli is justice\" Expected Output: an embed with verification unban Unban a user from the server. This user does not need to share the server with the bot. Usage: <prefix>unban <id> [reason] Parameters: id : The id of the user. reason : The reason for unbanning. Cooldown: 5 seconds per 2 uses (guild). Example: $unban 472832990012243969 You've been trained by the FBI now You need: Ban Members . The bot needs: Ban Members , Read Message History , Send Messages . This document is last updated on Feb 19th (PT) by MikeJollie#1067","title":"Moderation"},{"location":"commands/moderation/#moderation-commands","text":"","title":"Moderation commands"},{"location":"commands/moderation/#table-of-contents","text":"__init__ [INTERNAL] ban ban_eh [INTERNAL] hackban kick kick_eh [INTERNAL] mute [INCOMPLETE] [DEVELOPING] unban These are commands that performs moderating action.","title":"Table of Contents"},{"location":"commands/moderation/#__init__-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A constructor of this category. This set the Moderation category's emoji as \ud83d\udd28 .","title":"__init__ [INTERNAL]"},{"location":"commands/moderation/#ban","text":"Ban a member in the server. Note that the bot's role needs to be higher than the member to ban. Usage: <prefix>ban <member> [reason] Parameters: member : A Discord member. reason : The reason for banning. Cooldown: 5 seconds per 2 uses (guild). Example: $ban MikeJollie Audam-kun You need: Ban Members . The bot needs: Ban Members , Read Message History , Send Messages .","title":"ban"},{"location":"commands/moderation/#ban_eh-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A local error handler for the ban command. It is currently only response to the BadArgument exception, which signify the user is not in the guild cache.","title":"ban_eh [INTERNAL]"},{"location":"commands/moderation/#hackban","text":"Ban a user out of the server. This user does not need to share the server with the bot. Usage: <prefix>hackban <id> [reason] Parameters: id : The id of the user. reason : The reason for banning. Cooldown: 5 seconds per 2 uses (guild). Example: $hackban 472832990012243969 You have too many lolis You need: Ban Members . The bot needs: Ban Members , Read Message History , Send Messages .","title":"hackban"},{"location":"commands/moderation/#kick","text":"Kick a member out of the server. Note that the bot's role needs to be higher than the member to kick. Usage: <prefix>kick <member> [reason] Parameters: member : A Discord member. reason : The reason for kicking. Cooldown: 5 seconds per 2 uses (guild). Example: $kick MikeJollie Being dumb You need: Kick Members The bot needs: Kick Members , Read Message History , Send Messages .","title":"kick"},{"location":"commands/moderation/#kick_eh-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A local error handler for the kick command. It is currently only response to the BadArgument exception, which signify that the member is not in the guild.","title":"kick_eh [INTERNAL]"},{"location":"commands/moderation/#mute-incomplete-developing","text":"This section is labeled as [INCOMPLETE], will be updated in the future. This section is labeled as [DEVELOPING], which means the function/command is currently under development and not available for testing. Mute a member from chatting. Full Signature: @commands.command(hidden = True, enabled = True) @commands.has_permissions(kick_members = True) @commands.bot_has_guild_permissions(kick_members = True) @commands.cooldown(1, 5.0, commands.BucketType.guild) async def mute(self, ctx, member : discord.Member, *, reason = None): Simplified Signature: mute <member> [reason] Parameters: member : A Discord member. It can be any in the following form: [ID/discriminator/mention/name/nickname] reason : The reason for muting. Example: $mute MikeJollie Stop saying \"Loli is justice\" Expected Output: an embed with verification","title":"mute [INCOMPLETE] [DEVELOPING]"},{"location":"commands/moderation/#unban","text":"Unban a user from the server. This user does not need to share the server with the bot. Usage: <prefix>unban <id> [reason] Parameters: id : The id of the user. reason : The reason for unbanning. Cooldown: 5 seconds per 2 uses (guild). Example: $unban 472832990012243969 You've been trained by the FBI now You need: Ban Members . The bot needs: Ban Members , Read Message History , Send Messages . This document is last updated on Feb 19th (PT) by MikeJollie#1067","title":"unban"},{"location":"commands/music/","text":"Music [OUTDATED] [DEPRECATED] This section is labeled as [OUTDATED], will be updated in the future. This section is labeled as [DEPRECATED], which means it's possible to be removed in the future. This document is missing many functions/methods due to the complexity. It is currently only shows the commands. These are commands that play music in voice channel. It is currently support YouTube, SoundCloud, Twitch, Vimeo and Mixer. Note: This section might be removed in the future. In the mean time, every information below is not correct. connect Connect to a voice channel. If the channel is not specified, it'll attempt to join the current voice channel you're in. This command is implicitly called if the user invoke play without the bot inside a voice channel. Full Signature: @commands.command(aliases = [\"join\"]) @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def connect(self, ctx, *, channel : discord.VoiceChannel = None): Simplified Signature: connect [voicechannel] join [voicechannel] Parameters: channel : A Discord voice channel. This can be any of the following form: <ID/name> Example: $connect discord-got-talents Expected Output: No output . play Play the audio provided by the query. More precisely, it streams the audio, because the bot does not download the video. This command implicitly call connect if the user invoke without the bot insdie a voice channel. Full Signature: @commands.command(aliases = ['p']) @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) @commands.cooldown(rate = 1, per = 2.0, type = commands.BucketType.user) async def play(self, ctx, *, query : str): Simplified Signature: play <query> p <query> Parameters: query : The resource to play. This can be any of the following form: <link/name> Example: $play You've been gnomed Expected Output: an embed with information or reactions now_playing Indicate what song is playing. Full Signature: @commands.command(aliases = [\"np\"]) @commands.bot_has__guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) @commands.cooldown(rate = 2, per = 15.0, type = commands.BucketType.user) async def now_playing(self, ctx): Simplified Signature: now_playing np Example: $np Expected Output: an embed with information or reactions pause Pause the currently playing song. If there are more than one person in the voice channel, a poll will be created. The admin/DJ reaction will cancel the vote and in favor of that person. Full Signature: @commands.command() @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def pause(self, ctx): Simplified Signature: pause Example: $pause Expected Output: a vote resume Resume the currently paused song. If there are more than one person in the voice channel, a poll will be created. The admin/DJ reaction will cancel the vote and in favor of that person. Full Signature: @commands.command() @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def resume(self, ctx): Simplified Signature: resume Example: $resume Expected Output: a vote skip Skip the current song. If there are more than one person in the voice channel, a poll will be created. The admin/DJ reaction will cancel the vote and in favor of that person. Full Signature: @commands.command() @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def skip(self, ctx): Simplified Signature: skip Example: $skip Expected Output: a vote stop Stop the player, disconnect and clear the queue. If there are more than one person in the voice channel, a poll will be created. The admin/DJ reaction will cancel the vote and in favor of that person. Full Signature: @commands.command(aliases = [\"dc\", \"disconnect\"]) @commands.cooldown(rate = 1, per = 15.0, type = commands.BucketType.guild) @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def stop(self, ctx): Simplified Signature: stop Example: $stop Expected Output: ` a vote, then the bot disconnects volume Adjust the player's volume. Full Signature: @commands.command(aliases = [\"vol\"]) @commands.cooldown(rate = 1, per = 2.0, type = commands.BucketType.guild) @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def volume(self, ctx, *, value: int): Simplified Signature: volume <value> Parameter: value : The value you want the volume to be at. It is in the range 0 to 1000. Example: $vol 100 Expected Output: an embed with verification queue Retrieve a list of current queued songs. Full Signature: @commands.command() @commands.cooldown(rate = 1, per = 10.0, type = commands.BucketType.user) @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def queue(self, ctx): Simplified Signature: queue Example: $queue Expected Output: an embed with songs shuffle Shuffle the current queue. If there are more than one person in the voice channel, a poll will be created. The admin/DJ reaction will cancel the vote and in favor of that person. Full Signature: @commands.command(aliases = [\"mix\"]) @commands.cooldown(rate = 2, per = 10.0, type = commands.BucketType.user) @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def shuffle(self, ctx): Simplified Signature: shuffle Example: $shuffle Expected Output: a vote repeat Repeat the currently played song one more time. Full Signature: @commands.command(aliases = [\"loop\"]) @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def repeat(self, ctx): Simplified Signature: repeat Example: $repeat Expected Output: nothing This document is last updated on Oct 31st (PT) by MikeJollie#1067","title":"Music"},{"location":"commands/music/#music-outdated-deprecated","text":"This section is labeled as [OUTDATED], will be updated in the future. This section is labeled as [DEPRECATED], which means it's possible to be removed in the future. This document is missing many functions/methods due to the complexity. It is currently only shows the commands. These are commands that play music in voice channel. It is currently support YouTube, SoundCloud, Twitch, Vimeo and Mixer. Note: This section might be removed in the future. In the mean time, every information below is not correct.","title":"Music [OUTDATED] [DEPRECATED]"},{"location":"commands/music/#connect","text":"Connect to a voice channel. If the channel is not specified, it'll attempt to join the current voice channel you're in. This command is implicitly called if the user invoke play without the bot inside a voice channel. Full Signature: @commands.command(aliases = [\"join\"]) @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def connect(self, ctx, *, channel : discord.VoiceChannel = None): Simplified Signature: connect [voicechannel] join [voicechannel] Parameters: channel : A Discord voice channel. This can be any of the following form: <ID/name> Example: $connect discord-got-talents Expected Output: No output .","title":"connect"},{"location":"commands/music/#play","text":"Play the audio provided by the query. More precisely, it streams the audio, because the bot does not download the video. This command implicitly call connect if the user invoke without the bot insdie a voice channel. Full Signature: @commands.command(aliases = ['p']) @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) @commands.cooldown(rate = 1, per = 2.0, type = commands.BucketType.user) async def play(self, ctx, *, query : str): Simplified Signature: play <query> p <query> Parameters: query : The resource to play. This can be any of the following form: <link/name> Example: $play You've been gnomed Expected Output: an embed with information or reactions","title":"play"},{"location":"commands/music/#now_playing","text":"Indicate what song is playing. Full Signature: @commands.command(aliases = [\"np\"]) @commands.bot_has__guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) @commands.cooldown(rate = 2, per = 15.0, type = commands.BucketType.user) async def now_playing(self, ctx): Simplified Signature: now_playing np Example: $np Expected Output: an embed with information or reactions","title":"now_playing"},{"location":"commands/music/#pause","text":"Pause the currently playing song. If there are more than one person in the voice channel, a poll will be created. The admin/DJ reaction will cancel the vote and in favor of that person. Full Signature: @commands.command() @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def pause(self, ctx): Simplified Signature: pause Example: $pause Expected Output: a vote","title":"pause"},{"location":"commands/music/#resume","text":"Resume the currently paused song. If there are more than one person in the voice channel, a poll will be created. The admin/DJ reaction will cancel the vote and in favor of that person. Full Signature: @commands.command() @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def resume(self, ctx): Simplified Signature: resume Example: $resume Expected Output: a vote","title":"resume"},{"location":"commands/music/#skip","text":"Skip the current song. If there are more than one person in the voice channel, a poll will be created. The admin/DJ reaction will cancel the vote and in favor of that person. Full Signature: @commands.command() @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def skip(self, ctx): Simplified Signature: skip Example: $skip Expected Output: a vote","title":"skip"},{"location":"commands/music/#stop","text":"Stop the player, disconnect and clear the queue. If there are more than one person in the voice channel, a poll will be created. The admin/DJ reaction will cancel the vote and in favor of that person. Full Signature: @commands.command(aliases = [\"dc\", \"disconnect\"]) @commands.cooldown(rate = 1, per = 15.0, type = commands.BucketType.guild) @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def stop(self, ctx): Simplified Signature: stop Example: $stop Expected Output: ` a vote, then the bot disconnects","title":"stop"},{"location":"commands/music/#volume","text":"Adjust the player's volume. Full Signature: @commands.command(aliases = [\"vol\"]) @commands.cooldown(rate = 1, per = 2.0, type = commands.BucketType.guild) @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def volume(self, ctx, *, value: int): Simplified Signature: volume <value> Parameter: value : The value you want the volume to be at. It is in the range 0 to 1000. Example: $vol 100 Expected Output: an embed with verification","title":"volume"},{"location":"commands/music/#queue","text":"Retrieve a list of current queued songs. Full Signature: @commands.command() @commands.cooldown(rate = 1, per = 10.0, type = commands.BucketType.user) @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def queue(self, ctx): Simplified Signature: queue Example: $queue Expected Output: an embed with songs","title":"queue"},{"location":"commands/music/#shuffle","text":"Shuffle the current queue. If there are more than one person in the voice channel, a poll will be created. The admin/DJ reaction will cancel the vote and in favor of that person. Full Signature: @commands.command(aliases = [\"mix\"]) @commands.cooldown(rate = 2, per = 10.0, type = commands.BucketType.user) @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def shuffle(self, ctx): Simplified Signature: shuffle Example: $shuffle Expected Output: a vote","title":"shuffle"},{"location":"commands/music/#repeat","text":"Repeat the currently played song one more time. Full Signature: @commands.command(aliases = [\"loop\"]) @commands.bot_has_guild_permissions(connect = True, speak = True, add_reactions = True, manage_messages = True, send_messages = True) async def repeat(self, ctx): Simplified Signature: repeat Example: $repeat Expected Output: nothing This document is last updated on Oct 31st (PT) by MikeJollie#1067","title":"repeat"},{"location":"commands/nsfw/","text":"NSFW commands These are commands that are possibly NSFW. By default, it can only be used in a NSFW channel. Table of Contents __init__ [INTERNAL] cog_check [INTERNAL] konachan konachan tags display_hentai [INTERNAL] nhentai nhentai random nhentai search __init__ [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A constructor of the category. This also set the NSFW category's emoji as \ud83d\udd1e . cog_check [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A check that apply to all the command in this category. This check will check if ctx is in private DM or not, and will raise NoPrivateMessage() exception if it is. This also checks if ctx is in a NSFW channel or not, and will raise NSFWChannelRequired() if it isn't. konachan Send a picture from konachan API. This will run a search on konachan.net (mostly safe) or konachan.com and return an image. If not provided with tags, this will return a random image. If provided with tags, this will return an image with all the tags. Visit this page to see all the tags. Alternatively, you can use konachan tags to see some popular tags. Usage: <prefix>konachan <safe/any> <tags> Parameters: safe/any : Either safe (search on konachan.net ) or any (search on konachan.com ). Note that safe won't 100% guaranteed that the image is safe (hence why it is in NSFW category). tags : A list of tags to filter. The tags must be exactly the same as appears in konachan.com . Cooldown: 5 seconds per 1 use (member). Examples: Example 1: $konachan safe blush long_hair Example 2: $konachan any You need: None. The bot needs: Send Messages . Subcommands : tags konachan tags Show the top 10 tags in konachan.com . Usage: <prefix>konachan tags Example: $konachan tags You need: None. The bot needs: Send Messages . display_hentai [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A utility function to display a doujin. Full signature: async def display_hentai(self, ctx, doujin : hentai.Hentai): nhentai Search and return a doujin on request. Why need incognito tab when you can read it here on Discord? The command is currently doing nothing on its own. You must use its subcommands. Subcommands: random , search nhentai random Search and return a random doujin. This can either be a masterpiece or a piece of disgusting trash. Use this if you're bored and want to try a new experience. Usage: <prefix>nhentai random Cooldown: 5 seconds per 1 use (member). Example: $nhentai random You need: None. The bot needs: Add Reactions , Read Message History , Send Messages . nhentai search Search and return a doujin based on its tags or ID. If searched based on tags, it'll search based on Most Popular . Usage: <prefix>nhentai search <id/tags> Parameter: id/tags : Either the ID of the doujin or the tags if you want a more broad result. If there's a space in between a tag, use - . Cooldown: 5 seconds per 1 use (member). Examples: Example 1: $nhentai search 331228 Example 2: $nhentai search sole-male sole-female You need: None. The bot needs: Add Reactions , Read Message History , Send Messages . This document is last updated on Feb 19th (PT) by MikeJollie#1067","title":"NSFW"},{"location":"commands/nsfw/#nsfw-commands","text":"These are commands that are possibly NSFW. By default, it can only be used in a NSFW channel.","title":"NSFW commands"},{"location":"commands/nsfw/#table-of-contents","text":"__init__ [INTERNAL] cog_check [INTERNAL] konachan konachan tags display_hentai [INTERNAL] nhentai nhentai random nhentai search","title":"Table of Contents"},{"location":"commands/nsfw/#__init__-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A constructor of the category. This also set the NSFW category's emoji as \ud83d\udd1e .","title":"__init__ [INTERNAL]"},{"location":"commands/nsfw/#cog_check-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A check that apply to all the command in this category. This check will check if ctx is in private DM or not, and will raise NoPrivateMessage() exception if it is. This also checks if ctx is in a NSFW channel or not, and will raise NSFWChannelRequired() if it isn't.","title":"cog_check [INTERNAL]"},{"location":"commands/nsfw/#konachan","text":"Send a picture from konachan API. This will run a search on konachan.net (mostly safe) or konachan.com and return an image. If not provided with tags, this will return a random image. If provided with tags, this will return an image with all the tags. Visit this page to see all the tags. Alternatively, you can use konachan tags to see some popular tags. Usage: <prefix>konachan <safe/any> <tags> Parameters: safe/any : Either safe (search on konachan.net ) or any (search on konachan.com ). Note that safe won't 100% guaranteed that the image is safe (hence why it is in NSFW category). tags : A list of tags to filter. The tags must be exactly the same as appears in konachan.com . Cooldown: 5 seconds per 1 use (member). Examples: Example 1: $konachan safe blush long_hair Example 2: $konachan any You need: None. The bot needs: Send Messages . Subcommands : tags","title":"konachan"},{"location":"commands/nsfw/#konachan-tags","text":"Show the top 10 tags in konachan.com . Usage: <prefix>konachan tags Example: $konachan tags You need: None. The bot needs: Send Messages .","title":"konachan tags"},{"location":"commands/nsfw/#display_hentai-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A utility function to display a doujin. Full signature: async def display_hentai(self, ctx, doujin : hentai.Hentai):","title":"display_hentai [INTERNAL]"},{"location":"commands/nsfw/#nhentai","text":"Search and return a doujin on request. Why need incognito tab when you can read it here on Discord? The command is currently doing nothing on its own. You must use its subcommands. Subcommands: random , search","title":"nhentai"},{"location":"commands/nsfw/#nhentai-random","text":"Search and return a random doujin. This can either be a masterpiece or a piece of disgusting trash. Use this if you're bored and want to try a new experience. Usage: <prefix>nhentai random Cooldown: 5 seconds per 1 use (member). Example: $nhentai random You need: None. The bot needs: Add Reactions , Read Message History , Send Messages .","title":"nhentai random"},{"location":"commands/nsfw/#nhentai-search","text":"Search and return a doujin based on its tags or ID. If searched based on tags, it'll search based on Most Popular . Usage: <prefix>nhentai search <id/tags> Parameter: id/tags : Either the ID of the doujin or the tags if you want a more broad result. If there's a space in between a tag, use - . Cooldown: 5 seconds per 1 use (member). Examples: Example 1: $nhentai search 331228 Example 2: $nhentai search sole-male sole-female You need: None. The bot needs: Add Reactions , Read Message History , Send Messages . This document is last updated on Feb 19th (PT) by MikeJollie#1067","title":"nhentai search"},{"location":"commands/server/","text":"Settings commands These are commands that focus in providing Quality of Life for the guild. It comes with logging, welcoming, bad words filtering (new), goodbye (new), reaction roles (new), enabling/disabling a command (new). Table of Contents __init__ [INTERNAL] log_enable log_setup log_disable welcome_enable welcome_setup welcome_new_member [INTERNAL] welcome_disable __init__ [INTERNAL] This section is labeled as [INTERNAL], meaning that is is NOT a command. It is here only to serve the developers purpose. A constructor of the category. This set the Core category's emoji as \ud83d\udee0 . log_enable Enable logging in your server. Aliases: log-enable Usage: <prefix>log_enable Cooldown: 3 seconds per 1 use (guild) Example: $log_enable You need: Manage Server . The bot needs: View Audit Log , Read Message History , Send Messages . log_setup Set the logging channel or view which channel is one. This implicitly call log_enable if you haven't. Aliases: log-setup Usage: <prefix>log_setup <channel> Parameters: channel : The text channel you want the bot to send logs. By default, it's the current channel the command is invoked in. Cooldown: 3 seconds per 1 use (guild) Examples: Example 1: $log_setup Example 2: $log_setup #mikejollie-is-gay-change-my-mind You need: Manage Server . The bot needs: View Audit Log , Read Message History , Send Messages . log_disable Disable logging in your server. This doesn't remove the logging channel. Usage: <prefix>log_disable Cooldown: 3 seconds per 1 use (guild) Example: $log_disable You need: Manage Server . The bot needs: Read Message History , Send Messages. welcome_enable Enable welcoming new members in your server. Usage: <prefix>welcome_enable Cooldown: 3 seconds per 1 use (guild) Example: $welcome_enable You need: Manage Server . The bot needs: Read Message History , Send Messages . welcome_setup Set or view the welcome channel and message in your server. This implicitly invoke welcome_enable if you haven't. If you don't provide a welcome text, it is default to Hello [user.mention]! Welcome to **[guild.name]**! You're the [guild.count]th member in this server! Enjoy the fun!!! :tada: . Aliases: welcome-setup Usage: <prefix>welcome_setup [channel] [welcome text] Parameters: channel : The channel you want the bot to send welcome message. By default, it is the current channel. welcome text : A welcome text. If provided, channel must also be provided. By default, the message is Hello [user.mention]! Welcome to **[guild.name]**! You're the [guild.count]th member in this server! Enjoy the fun!!! :tada: . Possible arguments: [user.mention] : Mention the new user. [user.name] : Display the name of the user. [guild.name] : Display the name of the guild. [guild.count] : Display the current population of the guild. Cooldown: 3 seconds per 1 use (guild) Examples: Example 1: $welcome-setup 644336991135072261 Welcome [user.mention] to [guild.name]! Example 2: $welcome-setup a-random-welcome-channel You are the [guild.count]th member! Example 3: $welcome-setup #another-random-channel Example 4: $welcome-setup You need: Manage Server . The bot needs: Read Message History , Send Messages . welcome_new_member [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A listener to on_member_join() event that is responsible for sending the message to the welcome channel. Full signature: @commands.Cog.listener(\"on_member_join\") async def welcome_new_member(self, member): welcome_disable Disable welcoming in your server. This doesn't remove the welcome channel. Aliases: welcome-disable Usage: <prefix>welcome_disable Example: $welcome_disable You need: Manage Server . The bot needs: Read Message History , Send Messages . This document is last updated on Feb 20th 2021 by MikeJollie#1067","title":"Settings"},{"location":"commands/server/#settings-commands","text":"These are commands that focus in providing Quality of Life for the guild. It comes with logging, welcoming, bad words filtering (new), goodbye (new), reaction roles (new), enabling/disabling a command (new).","title":"Settings commands"},{"location":"commands/server/#table-of-contents","text":"__init__ [INTERNAL] log_enable log_setup log_disable welcome_enable welcome_setup welcome_new_member [INTERNAL] welcome_disable","title":"Table of Contents"},{"location":"commands/server/#__init__-internal","text":"This section is labeled as [INTERNAL], meaning that is is NOT a command. It is here only to serve the developers purpose. A constructor of the category. This set the Core category's emoji as \ud83d\udee0 .","title":"__init__ [INTERNAL]"},{"location":"commands/server/#log_enable","text":"Enable logging in your server. Aliases: log-enable Usage: <prefix>log_enable Cooldown: 3 seconds per 1 use (guild) Example: $log_enable You need: Manage Server . The bot needs: View Audit Log , Read Message History , Send Messages .","title":"log_enable"},{"location":"commands/server/#log_setup","text":"Set the logging channel or view which channel is one. This implicitly call log_enable if you haven't. Aliases: log-setup Usage: <prefix>log_setup <channel> Parameters: channel : The text channel you want the bot to send logs. By default, it's the current channel the command is invoked in. Cooldown: 3 seconds per 1 use (guild) Examples: Example 1: $log_setup Example 2: $log_setup #mikejollie-is-gay-change-my-mind You need: Manage Server . The bot needs: View Audit Log , Read Message History , Send Messages .","title":"log_setup"},{"location":"commands/server/#log_disable","text":"Disable logging in your server. This doesn't remove the logging channel. Usage: <prefix>log_disable Cooldown: 3 seconds per 1 use (guild) Example: $log_disable You need: Manage Server . The bot needs: Read Message History , Send Messages.","title":"log_disable"},{"location":"commands/server/#welcome_enable","text":"Enable welcoming new members in your server. Usage: <prefix>welcome_enable Cooldown: 3 seconds per 1 use (guild) Example: $welcome_enable You need: Manage Server . The bot needs: Read Message History , Send Messages .","title":"welcome_enable"},{"location":"commands/server/#welcome_setup","text":"Set or view the welcome channel and message in your server. This implicitly invoke welcome_enable if you haven't. If you don't provide a welcome text, it is default to Hello [user.mention]! Welcome to **[guild.name]**! You're the [guild.count]th member in this server! Enjoy the fun!!! :tada: . Aliases: welcome-setup Usage: <prefix>welcome_setup [channel] [welcome text] Parameters: channel : The channel you want the bot to send welcome message. By default, it is the current channel. welcome text : A welcome text. If provided, channel must also be provided. By default, the message is Hello [user.mention]! Welcome to **[guild.name]**! You're the [guild.count]th member in this server! Enjoy the fun!!! :tada: . Possible arguments: [user.mention] : Mention the new user. [user.name] : Display the name of the user. [guild.name] : Display the name of the guild. [guild.count] : Display the current population of the guild. Cooldown: 3 seconds per 1 use (guild) Examples: Example 1: $welcome-setup 644336991135072261 Welcome [user.mention] to [guild.name]! Example 2: $welcome-setup a-random-welcome-channel You are the [guild.count]th member! Example 3: $welcome-setup #another-random-channel Example 4: $welcome-setup You need: Manage Server . The bot needs: Read Message History , Send Messages .","title":"welcome_setup"},{"location":"commands/server/#welcome_new_member-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A listener to on_member_join() event that is responsible for sending the message to the welcome channel. Full signature: @commands.Cog.listener(\"on_member_join\") async def welcome_new_member(self, member):","title":"welcome_new_member [INTERNAL]"},{"location":"commands/server/#welcome_disable","text":"Disable welcoming in your server. This doesn't remove the welcome channel. Aliases: welcome-disable Usage: <prefix>welcome_disable Example: $welcome_disable You need: Manage Server . The bot needs: Read Message History , Send Messages . This document is last updated on Feb 20th 2021 by MikeJollie#1067","title":"welcome_disable"},{"location":"commands/utility/","text":"Utility commands These are commands that are just random and fun. Table of Contents __init__ [INTERNAL] cog_check [INTERNAL] calc dice embed embed info embed_simple [BETA] how howgay ping poll [BETA] say send speak __init__ [INTERNAL] This section is labeled as [INTERNAL], meaning that is is NOT a command. It is here only to serve the developers purpose. A constructor of the category. This set the Utility category's emoji as \ud83d\ude06 . cog_check [INTERNAL] This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A check that apply to all the command in this category. This check will check if ctx is in private DM or not, and will raise NoPrivateMessage() exception if it is. calc A mini calculator that calculate like a calculator (duh). Possible constants you can use are: PI , E . Note 1: Trigonometry functions follow radian, not degree . Note 2: sin(PI) and some others will returns non-zero result due to decimal accuracy. Usage: <prefix>calc <expression> Examples: Example 1: $calc 1+2 Example 2: $calc 1 + 2 - 3 * 4 / 5 Example 3: $calc sqrt(25) * (3 + 4) - sin(0) You need: None. The bot needs: Read Message History , Send Messages . dice Roll a dice. Simple. 6-sided though. Usage: <prefix>dice Example: $dice You need: None. The bot needs: Read Message History , Send Messages . embed Create and send a full-featured rich embed. Refers to embed info for more information. Usage: <prefix>embed <json-like object> Parameter: json-like object : Refers to embed info for more information . Cooldown: 5 seconds per 1 use (user) Example: In embed info You need: None. The bot needs: Send Messages . Subcommands: info embed info Display the following text: To create a full-featured rich embed, you must use the JSON format as part of the argument. Take a look at this awesome page that visualize the embed and make your life much easier when writing JSON. Edit the embed like you want to, and copy the JSON on the right, and surround that around codeblock to look easier. For example: $embed { \"title\": \"Title\", \"description\": \"Description\", \"color\": 53380, \"fields\": [ { \"name\": \"Field 1\", \"value\": \"Value 1\", \"inline\": true } ] } Try poking around the visualizer for many other features. For those who are hardcore enough to say \"Visualizer is for noob\", then go read the official definition of an embed and write one for yourself. Usage: <prefix>embed info Cooldown: 5 seconds per 1 use (user) Example: $embed info You need: None. The bot needs: Manage Messages , Read Message History , Send Messages . embed_simple [BETA] This section is labeled as [BETA], which means the function/command is currently in beta testing and possibly publicly available. Send a simple embed message. You'll respond to 3 questions to determine the content. Use Pass if you want to skip one. Usage: <prefix>embed_simple Cooldown: 5 seconds per 1 use (user) Example: $embed_simple You need: None. The bot needs: Manage Messages , Read Message History , Send Messages . how An ultimate measurement to everything except gayness. Use howgay for that. Usage: <prefix>how <measure unit> <target> Parameters: measure unit : Can be anything. Be creative! Examples: smart , dumb , weird , etc. target : Can be anything. Be creative! Examples: MichaelBot , MikeJollie , your mom , etc. Cooldown: 10 seconds per 5 uses (user) Examples: Example 1: $how smart Stranger.com Example 2: $how \"stupidly dumb\" \"Nightmare monsters\" You need: None. The bot needs: Read Message History , Send Messages . howgay An ultimate measurement to gayness. Use how if you want to measure other things. Usage: <prefix>howgay <target> Parameters: target : Can be anything. Be creative! Examples: MichaelBot , Ace_Shiro , Fortnite , etc. Cooldwn: 10 seconds per 5 uses (user) Examples: Example 1: $howgay MikeJollie Example 2: $howgay \"iphone 11\" You need: None. The bot needs: Read Message History , Send Messages . ping Show the latency of the bot. It might take a while to update. Usage: <prefix>ping Example: $ping You need: None. The bot needs: Read Message History , Send Messages . poll [BETA] This section is labeled as [BETA], which means the function/command is currently in beta testing and possibly publicly available. Make a poll for you right in the current channel. Currently it only support up to 10 options max and at least 2 options. Usage: <prefix>poll <title> <choice 1 | choice 2 | choice n> Parameters: title : The title of the poll. Wrap with \"\" if it has spaces. choice 1 | choice 2 : The options separated by a space, | and another space. Example: $poll \"Who's cooler?\" MichaelBot | MikeJollie | \"Some random nons\" You need: None. The bot needs: Add Reactions , Read Message History , Send Messages . say Repeat what you say. Like a parrot. Usage: <prefix>say <content> Parameter: content : The content. Example: $say MikeJollie is gay lol. You need: None. The bot needs: Manage Messages , Send Messages . send Send a message to a user or to a channel. A basic rule is the bot can't send message to the destination if it can't see or doesn't have permissions. Usage: <prefix>send <id> <message> Parameters: id : Either a channel's id or a user's id. The destination must allows the bot to send. message : The message. Cooldown: 120 seconds per 1 use (user) Example: $send 577663051722129427 Gay. You need: None. The bot needs: Send Messages . speak Make the bot speak! Usage: <prefix>speak <content> Parameter: content : The content Example: $speak MikeJollie is gay. You need: None. The bot needs: Manage Messages , Send TTS Messages , Send Messages . This document is last updated on Feb 20th (PT) by MikeJollie#1067","title":"Utility"},{"location":"commands/utility/#utility-commands","text":"These are commands that are just random and fun.","title":"Utility commands"},{"location":"commands/utility/#table-of-contents","text":"__init__ [INTERNAL] cog_check [INTERNAL] calc dice embed embed info embed_simple [BETA] how howgay ping poll [BETA] say send speak","title":"Table of Contents"},{"location":"commands/utility/#__init__-internal","text":"This section is labeled as [INTERNAL], meaning that is is NOT a command. It is here only to serve the developers purpose. A constructor of the category. This set the Utility category's emoji as \ud83d\ude06 .","title":"__init__ [INTERNAL]"},{"location":"commands/utility/#cog_check-internal","text":"This section is labeled as [INTERNAL], meaning that it is NOT a command. It is here only to serve the developers purpose. A check that apply to all the command in this category. This check will check if ctx is in private DM or not, and will raise NoPrivateMessage() exception if it is.","title":"cog_check [INTERNAL]"},{"location":"commands/utility/#calc","text":"A mini calculator that calculate like a calculator (duh). Possible constants you can use are: PI , E . Note 1: Trigonometry functions follow radian, not degree . Note 2: sin(PI) and some others will returns non-zero result due to decimal accuracy. Usage: <prefix>calc <expression> Examples: Example 1: $calc 1+2 Example 2: $calc 1 + 2 - 3 * 4 / 5 Example 3: $calc sqrt(25) * (3 + 4) - sin(0) You need: None. The bot needs: Read Message History , Send Messages .","title":"calc"},{"location":"commands/utility/#dice","text":"Roll a dice. Simple. 6-sided though. Usage: <prefix>dice Example: $dice You need: None. The bot needs: Read Message History , Send Messages .","title":"dice"},{"location":"commands/utility/#embed","text":"Create and send a full-featured rich embed. Refers to embed info for more information. Usage: <prefix>embed <json-like object> Parameter: json-like object : Refers to embed info for more information . Cooldown: 5 seconds per 1 use (user) Example: In embed info You need: None. The bot needs: Send Messages . Subcommands: info","title":"embed"},{"location":"commands/utility/#embed-info","text":"Display the following text: To create a full-featured rich embed, you must use the JSON format as part of the argument. Take a look at this awesome page that visualize the embed and make your life much easier when writing JSON. Edit the embed like you want to, and copy the JSON on the right, and surround that around codeblock to look easier. For example: $embed { \"title\": \"Title\", \"description\": \"Description\", \"color\": 53380, \"fields\": [ { \"name\": \"Field 1\", \"value\": \"Value 1\", \"inline\": true } ] } Try poking around the visualizer for many other features. For those who are hardcore enough to say \"Visualizer is for noob\", then go read the official definition of an embed and write one for yourself. Usage: <prefix>embed info Cooldown: 5 seconds per 1 use (user) Example: $embed info You need: None. The bot needs: Manage Messages , Read Message History , Send Messages .","title":"embed info"},{"location":"commands/utility/#embed_simple-beta","text":"This section is labeled as [BETA], which means the function/command is currently in beta testing and possibly publicly available. Send a simple embed message. You'll respond to 3 questions to determine the content. Use Pass if you want to skip one. Usage: <prefix>embed_simple Cooldown: 5 seconds per 1 use (user) Example: $embed_simple You need: None. The bot needs: Manage Messages , Read Message History , Send Messages .","title":"embed_simple [BETA]"},{"location":"commands/utility/#how","text":"An ultimate measurement to everything except gayness. Use howgay for that. Usage: <prefix>how <measure unit> <target> Parameters: measure unit : Can be anything. Be creative! Examples: smart , dumb , weird , etc. target : Can be anything. Be creative! Examples: MichaelBot , MikeJollie , your mom , etc. Cooldown: 10 seconds per 5 uses (user) Examples: Example 1: $how smart Stranger.com Example 2: $how \"stupidly dumb\" \"Nightmare monsters\" You need: None. The bot needs: Read Message History , Send Messages .","title":"how"},{"location":"commands/utility/#howgay","text":"An ultimate measurement to gayness. Use how if you want to measure other things. Usage: <prefix>howgay <target> Parameters: target : Can be anything. Be creative! Examples: MichaelBot , Ace_Shiro , Fortnite , etc. Cooldwn: 10 seconds per 5 uses (user) Examples: Example 1: $howgay MikeJollie Example 2: $howgay \"iphone 11\" You need: None. The bot needs: Read Message History , Send Messages .","title":"howgay"},{"location":"commands/utility/#ping","text":"Show the latency of the bot. It might take a while to update. Usage: <prefix>ping Example: $ping You need: None. The bot needs: Read Message History , Send Messages .","title":"ping"},{"location":"commands/utility/#poll-beta","text":"This section is labeled as [BETA], which means the function/command is currently in beta testing and possibly publicly available. Make a poll for you right in the current channel. Currently it only support up to 10 options max and at least 2 options. Usage: <prefix>poll <title> <choice 1 | choice 2 | choice n> Parameters: title : The title of the poll. Wrap with \"\" if it has spaces. choice 1 | choice 2 : The options separated by a space, | and another space. Example: $poll \"Who's cooler?\" MichaelBot | MikeJollie | \"Some random nons\" You need: None. The bot needs: Add Reactions , Read Message History , Send Messages .","title":"poll [BETA]"},{"location":"commands/utility/#say","text":"Repeat what you say. Like a parrot. Usage: <prefix>say <content> Parameter: content : The content. Example: $say MikeJollie is gay lol. You need: None. The bot needs: Manage Messages , Send Messages .","title":"say"},{"location":"commands/utility/#send","text":"Send a message to a user or to a channel. A basic rule is the bot can't send message to the destination if it can't see or doesn't have permissions. Usage: <prefix>send <id> <message> Parameters: id : Either a channel's id or a user's id. The destination must allows the bot to send. message : The message. Cooldown: 120 seconds per 1 use (user) Example: $send 577663051722129427 Gay. You need: None. The bot needs: Send Messages .","title":"send"},{"location":"commands/utility/#speak","text":"Make the bot speak! Usage: <prefix>speak <content> Parameter: content : The content Example: $speak MikeJollie is gay. You need: None. The bot needs: Manage Messages , Send TTS Messages , Send Messages . This document is last updated on Feb 20th (PT) by MikeJollie#1067","title":"speak"},{"location":"currency/balance_changes/","text":"Balance Changes This document will show, in details, the changes made to an item. Usually, this is a change in price, but it can also be a change in rarity, description, durability, etc. The page also shows the beta branch's price changes. Table of Contents 1.6.5.4 Buffs Nerfs Neutral changes Comment 1.6.5 Buffs Nerfs Neutral changes Comment 1.6.4 Buffs Nerfs Neutral changes 1.6.5.4 Buffs Iron sell price increased from 40 to 45 (+12.5%). Redstone sell price increased from 30 to 42 (+40%). Iron tools sell price increased from [43, 43, 45] to [65, 65, 63]. Diamond tools sell price increased from [150, 150, 140] to [200, 250, 195]. Gold sell price increased from 35 to 50 (+42.9%) Ancient Debris sell price increased from 200 to 500 (+250%). Netherite sell price increased from 500 to 2000 (+300%). Netherite tools sell price increased from [550, 550, 550] to [2200, 2200, 2200] (+440%). Space Orb and Star Fragment sell price increased from 1000 to 10000 (+900%). Star Gem sell price increased from 10000 to 100000 (+900%). Fragile Star Pickaxe sell price increased from 15000 to 125000 (+733%). Steady Star Pickaxe sell price increased from 20000 to 150000 (+650%). Spider Eye buy price decreased from 40 to 35 (-12.5%). Magma Cream sell price increased from 20 to 25 (+25%) Blaze Rod sell price increased from 45 to 50 (+11.1%). Nerfs Iron, Redstone, Diamond, Gold, Ancient Debris, and some other rare but useful resourses drop chance scalings are now significantly lower. Stone sell price decreased from 22 to 20 (-10%). Neutral changes Potions sell price is x10, except for Fire Potion. Comment The main target for this changes is to significantly hurt the drop chance of many items (for example, diamond). Before, switching from iron pickaxe to diamond pickaxe can increase drop chance up to 10 times theoretically. Now, the scaling should be much lower, but more realistic, of 2 times per rank increment, 5 times is possibly the max. Many items' sell prices are increased to partially compensate this. The neutral changes for potions is not significant at all, however, in a way, that is a huge nerf. I won't tell why. 1.6.5 Buffs Stone sell price increased from 20 to 22 (+10%). Gold sell price increased from 30 to 35 (+17%). Ancient Debris sell price increased from 150 to 200 (+33%). Netherite sell price increased from 200 to 500 (+150%). Netherite tools sell price increased from 250 to 550 (+120%). Apple sell price increased from 5 to 8 (+60%). Spider eye is purchasable, sell price increased from 20 to 25 (+25%). Redstone drop chance is increased across all pickaxes that can drop redstone. Nerfs Log sell price decreased from 20 to 18 (-10%). Iron sell price decreased from 50 to 40 (-20%). Redstone sell price decreased from 40 to 30 (-25%). Iron tools sell price decreased from [58, 60, 59] to [43, 43, 45]. Obsidian sell price decreased from 80 to 75 (-6.25%). Haste potion buy price increased from 100000 to 120000 (+17%). Haste potion now requires 32x spider eyes instead of 16x (+100%). Iron drop chance is decreased for iron pickaxe and higher. Neutral changes None . Comment This balance changes is made due to iron's value is way too high despite not having much uses. Additionally, it slightly buff redstone, as it is a hard ingredient to gain for potions. Finally, netherrite deserves more value than it was, hence the massive increase in value. 1.6.4 Buffs Stone sell price increased from 15 to 20. Iron sell price increased from 30 to 50. Iron sword sell price increased from 43 to 58. Iron pickaxe sell price increased from 45 to 60. Iron axe sell price increased from 47 to 59. Gold sell price increased from 20 to 30. Fire Potion, Luck Potion, and Haste Potion sell price increased from 60 to 100 (150 for Haste Potion). Nerfs Redstone sell price decreased from 50 to 40. Stone sword sell price decreased from 28 to 23. Stone pickaxe sell price decreased from 30 to 25. Stone axe sell price decreased from 32 to 27. Diamond axe sell price decreased from 150 to 140. Netherrack sell price decreased from 10 to 8. Netherite axe sell price decreased from 300 to 250. Neutral changes Wooden sword price decreased from (28, 23) to (10, 8). Wooden pickaxe price decreased from (30, 25) to (12, 10). Wooden axe price decreased from (32, 27) to (11, 9). Apple now can be bought with $10. However, the sell price decreased from 10 to 5. Flower now can be bought with $11. However, the sell price decreased from 10 to 8. Blaze rod rarity is now uncommon instead of rare. This is visual-only change.","title":"Balance Changes"},{"location":"currency/balance_changes/#balance-changes","text":"This document will show, in details, the changes made to an item. Usually, this is a change in price, but it can also be a change in rarity, description, durability, etc. The page also shows the beta branch's price changes.","title":"Balance Changes"},{"location":"currency/balance_changes/#table-of-contents","text":"1.6.5.4 Buffs Nerfs Neutral changes Comment 1.6.5 Buffs Nerfs Neutral changes Comment 1.6.4 Buffs Nerfs Neutral changes","title":"Table of Contents"},{"location":"currency/balance_changes/#1654","text":"","title":"1.6.5.4"},{"location":"currency/balance_changes/#buffs","text":"Iron sell price increased from 40 to 45 (+12.5%). Redstone sell price increased from 30 to 42 (+40%). Iron tools sell price increased from [43, 43, 45] to [65, 65, 63]. Diamond tools sell price increased from [150, 150, 140] to [200, 250, 195]. Gold sell price increased from 35 to 50 (+42.9%) Ancient Debris sell price increased from 200 to 500 (+250%). Netherite sell price increased from 500 to 2000 (+300%). Netherite tools sell price increased from [550, 550, 550] to [2200, 2200, 2200] (+440%). Space Orb and Star Fragment sell price increased from 1000 to 10000 (+900%). Star Gem sell price increased from 10000 to 100000 (+900%). Fragile Star Pickaxe sell price increased from 15000 to 125000 (+733%). Steady Star Pickaxe sell price increased from 20000 to 150000 (+650%). Spider Eye buy price decreased from 40 to 35 (-12.5%). Magma Cream sell price increased from 20 to 25 (+25%) Blaze Rod sell price increased from 45 to 50 (+11.1%).","title":"Buffs"},{"location":"currency/balance_changes/#nerfs","text":"Iron, Redstone, Diamond, Gold, Ancient Debris, and some other rare but useful resourses drop chance scalings are now significantly lower. Stone sell price decreased from 22 to 20 (-10%).","title":"Nerfs"},{"location":"currency/balance_changes/#neutral-changes","text":"Potions sell price is x10, except for Fire Potion.","title":"Neutral changes"},{"location":"currency/balance_changes/#comment","text":"The main target for this changes is to significantly hurt the drop chance of many items (for example, diamond). Before, switching from iron pickaxe to diamond pickaxe can increase drop chance up to 10 times theoretically. Now, the scaling should be much lower, but more realistic, of 2 times per rank increment, 5 times is possibly the max. Many items' sell prices are increased to partially compensate this. The neutral changes for potions is not significant at all, however, in a way, that is a huge nerf. I won't tell why.","title":"Comment"},{"location":"currency/balance_changes/#165","text":"","title":"1.6.5"},{"location":"currency/balance_changes/#buffs_1","text":"Stone sell price increased from 20 to 22 (+10%). Gold sell price increased from 30 to 35 (+17%). Ancient Debris sell price increased from 150 to 200 (+33%). Netherite sell price increased from 200 to 500 (+150%). Netherite tools sell price increased from 250 to 550 (+120%). Apple sell price increased from 5 to 8 (+60%). Spider eye is purchasable, sell price increased from 20 to 25 (+25%). Redstone drop chance is increased across all pickaxes that can drop redstone.","title":"Buffs"},{"location":"currency/balance_changes/#nerfs_1","text":"Log sell price decreased from 20 to 18 (-10%). Iron sell price decreased from 50 to 40 (-20%). Redstone sell price decreased from 40 to 30 (-25%). Iron tools sell price decreased from [58, 60, 59] to [43, 43, 45]. Obsidian sell price decreased from 80 to 75 (-6.25%). Haste potion buy price increased from 100000 to 120000 (+17%). Haste potion now requires 32x spider eyes instead of 16x (+100%). Iron drop chance is decreased for iron pickaxe and higher.","title":"Nerfs"},{"location":"currency/balance_changes/#neutral-changes_1","text":"None .","title":"Neutral changes"},{"location":"currency/balance_changes/#comment_1","text":"This balance changes is made due to iron's value is way too high despite not having much uses. Additionally, it slightly buff redstone, as it is a hard ingredient to gain for potions. Finally, netherrite deserves more value than it was, hence the massive increase in value.","title":"Comment"},{"location":"currency/balance_changes/#164","text":"","title":"1.6.4"},{"location":"currency/balance_changes/#buffs_2","text":"Stone sell price increased from 15 to 20. Iron sell price increased from 30 to 50. Iron sword sell price increased from 43 to 58. Iron pickaxe sell price increased from 45 to 60. Iron axe sell price increased from 47 to 59. Gold sell price increased from 20 to 30. Fire Potion, Luck Potion, and Haste Potion sell price increased from 60 to 100 (150 for Haste Potion).","title":"Buffs"},{"location":"currency/balance_changes/#nerfs_2","text":"Redstone sell price decreased from 50 to 40. Stone sword sell price decreased from 28 to 23. Stone pickaxe sell price decreased from 30 to 25. Stone axe sell price decreased from 32 to 27. Diamond axe sell price decreased from 150 to 140. Netherrack sell price decreased from 10 to 8. Netherite axe sell price decreased from 300 to 250.","title":"Nerfs"},{"location":"currency/balance_changes/#neutral-changes_2","text":"Wooden sword price decreased from (28, 23) to (10, 8). Wooden pickaxe price decreased from (30, 25) to (12, 10). Wooden axe price decreased from (32, 27) to (11, 9). Apple now can be bought with $10. However, the sell price decreased from 10 to 5. Flower now can be bought with $11. However, the sell price decreased from 10 to 8. Blaze rod rarity is now uncommon instead of rare. This is visual-only change.","title":"Neutral changes"},{"location":"currency/currency_advanced/","text":"Currency 104 Trade trade and barter is a more exciting version of market . It gives new deals every 4 hours. These deals can be slightly overvalued or undervalued. However, the best thing about these 2 is that it can buy some non-purchasable items . Check them out for some fun! Potions Potions are rich people's playground. It massively enhances the effectiveness of activities if used properly. You can not \"craft\" potions however, you brew them. The command brew is like the craft command, but exclusively for potions. Thus, you can check the ingredient by brew recipe subcommand. Potions are similar to tools, in the sense that they have durability and can be viewed with equipments . To use a potion, usepotion . A potion has stacks . Some potions' effectiveness increase as the stacks increase. The max stack for any potions is 10. Stacks are calculated as current durability / potion's base durability rounded up. You can only use up to 3 different types of potions at a time . Luck Potion Luck potion is one of the most OP potion. It increases the number of rolls for each activity commands, allowing you to gain more loot and more importantly, more chance of getting rare items. The multiplier is based on its stack. It has a 50% chance of activating. Fire Potion Fire potion is a fairly useful potion in the Nether. When the rng marks you to die in the Nether, the Fire Potion will then have a 25% chance of negating such death. The stack of fire potion does not affect this chance, nor give you any benefits. Haste Potion A fairly useful potion to greatly improve the loot yield from a mining session. It takes the amount of items you're supposed to have (after applying Luck Potion also), and multiply it. The multiplier is based on its stack. It has a 75% chance of activating. Looting Potion A Haste Potion, but for adventure instead. It has the exact same stats as the Haste Potion. Badges Badge is a newly added feature which offer a permanent buff on the user, or just simply there to decorate your profile. Getting these badges requires you to progress further into the economy. Name Bot's Description Explanation (if unclear) The Beginning A decorative badge. Earned from having a log in your inventory. Upgrade People, Upgrade A decorative badge. Earned from having a Stone Pickaxe in your inventory. Metal A decorative badge. Earned from having an iron in your inventory. Diamond! A decorative badge. Earned from having a diamond in your inventory. Hellfire A decorative badge. Earned from entering the Nether. (currently unobtainable due to not implemented) Hidden In The Depth A decorative badge. Earned from getting Ancient Debris. Have at least 1x Ancient Debris in your inventory. Restoration A decorative badge. Earned from crafting Netherite. Have at least 1x Netherite in your inventory. Wooden Age After chopping quite an amount of logs, the merchant decides to buy your wood for a higher price. Have 5000x Log or more in your inventory at one point. Gives +5% sell price of log. Stone Age There's a shortage of stone ~~definitely not caused by you~~, so stone sell's price is increased. Have 10000x Stone or more in your inventory at one point. Gives +5% sell price of stone. Iron Age Everyone wants iron. With that in mind, you now sell it for even a higher price. Have 5000x Iron or more in your inventory at one point. Gives +5% sell price of iron. Oh Shiny! After mining quite an amount of diamonds, you now know the strategy to greatly improve your chance of finding diamonds. Have 1000x Diamond or more in your inventory at one point. Gives x2 diamond chance across all pickaxes. Heavy Metals After obtaining quite an amount of netherites, you now know the strategy to greatly improve your chance of finding ancient debris. Have 100x Netherite or more in your inventory at one point. Gives x2 ancient debris chance across all pickaxes.","title":"Advanced"},{"location":"currency/currency_advanced/#currency-104","text":"","title":"Currency 104"},{"location":"currency/currency_advanced/#trade","text":"trade and barter is a more exciting version of market . It gives new deals every 4 hours. These deals can be slightly overvalued or undervalued. However, the best thing about these 2 is that it can buy some non-purchasable items . Check them out for some fun!","title":"Trade"},{"location":"currency/currency_advanced/#potions","text":"Potions are rich people's playground. It massively enhances the effectiveness of activities if used properly. You can not \"craft\" potions however, you brew them. The command brew is like the craft command, but exclusively for potions. Thus, you can check the ingredient by brew recipe subcommand. Potions are similar to tools, in the sense that they have durability and can be viewed with equipments . To use a potion, usepotion . A potion has stacks . Some potions' effectiveness increase as the stacks increase. The max stack for any potions is 10. Stacks are calculated as current durability / potion's base durability rounded up. You can only use up to 3 different types of potions at a time .","title":"Potions"},{"location":"currency/currency_advanced/#luck-potion","text":"Luck potion is one of the most OP potion. It increases the number of rolls for each activity commands, allowing you to gain more loot and more importantly, more chance of getting rare items. The multiplier is based on its stack. It has a 50% chance of activating.","title":"Luck Potion"},{"location":"currency/currency_advanced/#fire-potion","text":"Fire potion is a fairly useful potion in the Nether. When the rng marks you to die in the Nether, the Fire Potion will then have a 25% chance of negating such death. The stack of fire potion does not affect this chance, nor give you any benefits.","title":"Fire Potion"},{"location":"currency/currency_advanced/#haste-potion","text":"A fairly useful potion to greatly improve the loot yield from a mining session. It takes the amount of items you're supposed to have (after applying Luck Potion also), and multiply it. The multiplier is based on its stack. It has a 75% chance of activating.","title":"Haste Potion"},{"location":"currency/currency_advanced/#looting-potion","text":"A Haste Potion, but for adventure instead. It has the exact same stats as the Haste Potion.","title":"Looting Potion"},{"location":"currency/currency_advanced/#badges","text":"Badge is a newly added feature which offer a permanent buff on the user, or just simply there to decorate your profile. Getting these badges requires you to progress further into the economy. Name Bot's Description Explanation (if unclear) The Beginning A decorative badge. Earned from having a log in your inventory. Upgrade People, Upgrade A decorative badge. Earned from having a Stone Pickaxe in your inventory. Metal A decorative badge. Earned from having an iron in your inventory. Diamond! A decorative badge. Earned from having a diamond in your inventory. Hellfire A decorative badge. Earned from entering the Nether. (currently unobtainable due to not implemented) Hidden In The Depth A decorative badge. Earned from getting Ancient Debris. Have at least 1x Ancient Debris in your inventory. Restoration A decorative badge. Earned from crafting Netherite. Have at least 1x Netherite in your inventory. Wooden Age After chopping quite an amount of logs, the merchant decides to buy your wood for a higher price. Have 5000x Log or more in your inventory at one point. Gives +5% sell price of log. Stone Age There's a shortage of stone ~~definitely not caused by you~~, so stone sell's price is increased. Have 10000x Stone or more in your inventory at one point. Gives +5% sell price of stone. Iron Age Everyone wants iron. With that in mind, you now sell it for even a higher price. Have 5000x Iron or more in your inventory at one point. Gives +5% sell price of iron. Oh Shiny! After mining quite an amount of diamonds, you now know the strategy to greatly improve your chance of finding diamonds. Have 1000x Diamond or more in your inventory at one point. Gives x2 diamond chance across all pickaxes. Heavy Metals After obtaining quite an amount of netherites, you now know the strategy to greatly improve your chance of finding ancient debris. Have 100x Netherite or more in your inventory at one point. Gives x2 ancient debris chance across all pickaxes.","title":"Badges"},{"location":"currency/currency_basic/","text":"Currency 102 Daily The daily command is the only true starting point for new users. As the name suggested, you'll get a certain money and loot everyday. The command has a hard-coded 24-hour cooldown, with another 24-hour window to collect. If you collect before this 24-hour runs out, you will gain a streak. After certain streak milestones, you'll get much better money and loot. However, if you miss out the window, your streak will be reset to 0. Craft Like Minecraft, after you get some materials, you'll eventually need to craft. This can be done using the craft command. You can also use its subcommand to view all possible crafting recipes. Tools Tools are special items that can be used to perform activities . Currently there are 3 types of tools: pickaxe, axe, and sword. They are needed to use mine , chop , and adventure respectively. A tool has a fixed durability. This will wear out gradually as you perform activities. To use a tool, you need to equip with equip . You can check your current equipments with equipments . Once equipped, the tool can be used for the corresponding activity. If you try to equip the same type of tool, the old tool will be swapped out and will have 2 fates: either going back into your inventory (unused) or going to the Void (used). Be sure to check the durability before swapping tools. Activities Activities are a general terms to use when you use mine , chop or adventure . Each activity will give you items that is determined by your corresponding tool. The better the tool, the more loot you will get. There is a small chance of dying while doing these activities. Once you get the death message, all your equipped equipments are destroyed, and you lose 10% of your money as a fee to revive you. There is also chances of idle . While idling, you don't lose any items nor gain anything. The activity will also reset its cooldown. In other words, it's just like you didn't do the session in the first place. Shop The market command is used to convert items that you have into money. It also can be used to obtain some materials necessary for future uses. With market alone, you'll see a reaction page to see all the items' prices. With its subcommands market buy and market sell , you can buy or sell items. To sell items, such items must be available in your inventory. Not all items are purchasable or sellable. Inventory At the end of the day, you want to check what items you have. This is achieved with the command inventory . Note that equipped equipments won't show up in the inventory . This also implies that once equipped, the tool can only be used and then later on destroyed. It can't be sold during this process unless you swap it out.","title":"Basic"},{"location":"currency/currency_basic/#currency-102","text":"","title":"Currency 102"},{"location":"currency/currency_basic/#daily","text":"The daily command is the only true starting point for new users. As the name suggested, you'll get a certain money and loot everyday. The command has a hard-coded 24-hour cooldown, with another 24-hour window to collect. If you collect before this 24-hour runs out, you will gain a streak. After certain streak milestones, you'll get much better money and loot. However, if you miss out the window, your streak will be reset to 0.","title":"Daily"},{"location":"currency/currency_basic/#craft","text":"Like Minecraft, after you get some materials, you'll eventually need to craft. This can be done using the craft command. You can also use its subcommand to view all possible crafting recipes.","title":"Craft"},{"location":"currency/currency_basic/#tools","text":"Tools are special items that can be used to perform activities . Currently there are 3 types of tools: pickaxe, axe, and sword. They are needed to use mine , chop , and adventure respectively. A tool has a fixed durability. This will wear out gradually as you perform activities. To use a tool, you need to equip with equip . You can check your current equipments with equipments . Once equipped, the tool can be used for the corresponding activity. If you try to equip the same type of tool, the old tool will be swapped out and will have 2 fates: either going back into your inventory (unused) or going to the Void (used). Be sure to check the durability before swapping tools.","title":"Tools"},{"location":"currency/currency_basic/#activities","text":"Activities are a general terms to use when you use mine , chop or adventure . Each activity will give you items that is determined by your corresponding tool. The better the tool, the more loot you will get. There is a small chance of dying while doing these activities. Once you get the death message, all your equipped equipments are destroyed, and you lose 10% of your money as a fee to revive you. There is also chances of idle . While idling, you don't lose any items nor gain anything. The activity will also reset its cooldown. In other words, it's just like you didn't do the session in the first place.","title":"Activities"},{"location":"currency/currency_basic/#shop","text":"The market command is used to convert items that you have into money. It also can be used to obtain some materials necessary for future uses. With market alone, you'll see a reaction page to see all the items' prices. With its subcommands market buy and market sell , you can buy or sell items. To sell items, such items must be available in your inventory. Not all items are purchasable or sellable.","title":"Shop"},{"location":"currency/currency_basic/#inventory","text":"At the end of the day, you want to check what items you have. This is achieved with the command inventory . Note that equipped equipments won't show up in the inventory . This also implies that once equipped, the tool can only be used and then later on destroyed. It can't be sold during this process unless you swap it out.","title":"Inventory"},{"location":"currency/currency_intermediate/","text":"Currency 103: Nether Like in Minecraft, MichaelBot also has dimensions (or worlds). Currently, there are 2 worlds: Overworld and Nether . All users start out in the Overworld, and only from the Overworld can the user travel to different worlds. To access the Nether, a user must have a Nether Portal equipped. Most commands function similarly to as it is in the Overworld. However, some will behave a little differently, which will be addressed further in this page. Portal A portal is a special item in a way that it is automatically equipped upon creating it. Similar to a tool, it cannot be unequip, and only one of each type of portal can be active at once . A portal has very limited uses before it breaks. You can view its durability with equipments . To travel to another world, a user must have the corresponding portal crafted, then use the command travelto <destination> to go to the world. To go back to the Overworld, simply use travelto Overworld once again after the cooldown. This command has a hard-coded 24-hour cooldown. Loot Each world has its own loot table. For example, a mining session in the Overworld can give you stone, but in the Nether, it will give you netherrack instead. Nether also contains material to one of the strongest tool type: netherite . It is only obtainable through mining with a diamond pickaxe or higher in the Nether, and it drops under the form of ancient debris . Using ancient debris, the user can craft netherite, which can be used to craft netherite tools. Netherite tools can also have a 25% chance of not disappearing if you die. However, ancient debris is very rare. adventure in the Nether also yield valuable loots. One of the loot is magma cream , which is an ingredient for the fire potion. The other is blaze rod , one of the required ingredient for any potions. Risks The Nether is notoriously known for its difficulty. Thus, the die chance in the Nether is doubled compared to the Overworld. Due to this, plus the fact there's a 24-hour cooldown in travelling, and if you're aiming for ancient debris, it is highly recommended for the user to stockpile some diamonds . This chance can be partially negated by the use of potions, which will be discussed in the next page.","title":"Intermediate"},{"location":"currency/currency_intermediate/#currency-103-nether","text":"Like in Minecraft, MichaelBot also has dimensions (or worlds). Currently, there are 2 worlds: Overworld and Nether . All users start out in the Overworld, and only from the Overworld can the user travel to different worlds. To access the Nether, a user must have a Nether Portal equipped. Most commands function similarly to as it is in the Overworld. However, some will behave a little differently, which will be addressed further in this page.","title":"Currency 103: Nether"},{"location":"currency/currency_intermediate/#portal","text":"A portal is a special item in a way that it is automatically equipped upon creating it. Similar to a tool, it cannot be unequip, and only one of each type of portal can be active at once . A portal has very limited uses before it breaks. You can view its durability with equipments . To travel to another world, a user must have the corresponding portal crafted, then use the command travelto <destination> to go to the world. To go back to the Overworld, simply use travelto Overworld once again after the cooldown. This command has a hard-coded 24-hour cooldown.","title":"Portal"},{"location":"currency/currency_intermediate/#loot","text":"Each world has its own loot table. For example, a mining session in the Overworld can give you stone, but in the Nether, it will give you netherrack instead. Nether also contains material to one of the strongest tool type: netherite . It is only obtainable through mining with a diamond pickaxe or higher in the Nether, and it drops under the form of ancient debris . Using ancient debris, the user can craft netherite, which can be used to craft netherite tools. Netherite tools can also have a 25% chance of not disappearing if you die. However, ancient debris is very rare. adventure in the Nether also yield valuable loots. One of the loot is magma cream , which is an ingredient for the fire potion. The other is blaze rod , one of the required ingredient for any potions.","title":"Loot"},{"location":"currency/currency_intermediate/#risks","text":"The Nether is notoriously known for its difficulty. Thus, the die chance in the Nether is doubled compared to the Overworld. Due to this, plus the fact there's a 24-hour cooldown in travelling, and if you're aiming for ancient debris, it is highly recommended for the user to stockpile some diamonds . This chance can be partially negated by the use of potions, which will be discussed in the next page.","title":"Risks"},{"location":"currency/currency_start/","text":"Currency 101 The bot has a dedicated currency system that is heavily inspired by the Minecraft concept. However, because of the Discord limitation, sometimes it can be confusing on where to start or where to progress. This page serve a basic introduction to the overall economic system of MichaelBot. Don't expect any tips. Just like Minecraft, it is up to each person to decide what to do. Money Every user has a certain amount of money. This is fictional money, and has zero relation to the real life money. Money is global for user, meaning you have the same amount of money across all servers. Money can be a good way to flex on other people of how rich you are. You can get money from the command daily , by selling items and by winning games. You can check your balance with balance . You can also view the top 10 people with the highest amount of money with leaderboard . Items Items play a major role in the currency system. You need items to advance further into the system. Some of the early \"game\" items are log , wood , stick . Items have rarity to see how hard to obtain an item. Some of the items don't have rarity at all, and is displayed as ??? . Many items can be crafted using various materials, but some items are meant to be collected only. You can craft items, use items, buy items, and even sell items for money. This is somehow reported by many new users, but like, literally, just use daily to start. It's like the start of many economy systems ever existed in Discord. Items Information MichaelBot provides multiple commands to view and even to perform operations on items. Some of these commands are craft , iteminfo , and trade . Be sure to check out their help for possible subcommands. Disclaimers Regarding exploiting bugs If you are caught exploiting major bugs in MichaelBot to gain advantage, your progress can be reset, and sometimes you might be even get blacklist from the bot. Use report report to report the bug instead of exploiting it. Regarding real money As mentioned, under no circumstances MichaelBot's money is related to real money (including crypto currency). If you receive such trade, report and do not trade. Accepting the trade is a blacklistable on both parties. You will also receive no support for such trade.","title":"Intro"},{"location":"currency/currency_start/#currency-101","text":"The bot has a dedicated currency system that is heavily inspired by the Minecraft concept. However, because of the Discord limitation, sometimes it can be confusing on where to start or where to progress. This page serve a basic introduction to the overall economic system of MichaelBot. Don't expect any tips. Just like Minecraft, it is up to each person to decide what to do.","title":"Currency 101"},{"location":"currency/currency_start/#money","text":"Every user has a certain amount of money. This is fictional money, and has zero relation to the real life money. Money is global for user, meaning you have the same amount of money across all servers. Money can be a good way to flex on other people of how rich you are. You can get money from the command daily , by selling items and by winning games. You can check your balance with balance . You can also view the top 10 people with the highest amount of money with leaderboard .","title":"Money"},{"location":"currency/currency_start/#items","text":"Items play a major role in the currency system. You need items to advance further into the system. Some of the early \"game\" items are log , wood , stick . Items have rarity to see how hard to obtain an item. Some of the items don't have rarity at all, and is displayed as ??? . Many items can be crafted using various materials, but some items are meant to be collected only. You can craft items, use items, buy items, and even sell items for money. This is somehow reported by many new users, but like, literally, just use daily to start. It's like the start of many economy systems ever existed in Discord.","title":"Items"},{"location":"currency/currency_start/#items-information","text":"MichaelBot provides multiple commands to view and even to perform operations on items. Some of these commands are craft , iteminfo , and trade . Be sure to check out their help for possible subcommands.","title":"Items Information"},{"location":"currency/currency_start/#disclaimers","text":"","title":"Disclaimers"},{"location":"currency/currency_start/#regarding-exploiting-bugs","text":"If you are caught exploiting major bugs in MichaelBot to gain advantage, your progress can be reset, and sometimes you might be even get blacklist from the bot. Use report report to report the bug instead of exploiting it.","title":"Regarding exploiting bugs"},{"location":"currency/currency_start/#regarding-real-money","text":"As mentioned, under no circumstances MichaelBot's money is related to real money (including crypto currency). If you receive such trade, report and do not trade. Accepting the trade is a blacklistable on both parties. You will also receive no support for such trade.","title":"Regarding real money"},{"location":"template/help/","text":"Help template This is a template for the help command. It is used in help and help-all . Between help and help-all , help-all is automatically handled by the library, while help is a custom command that copies the behavior of help-all . Table of Contents cog_help_format command_help_format BigHelp __init__ send_bot_help send_cog_help send_group_help send_command_help SmallHelp __init__ send_bot_help send_cog_help send_command_help cog_help_format Return an embed that display a category's help. The method is responsible for the display of a category's help. Full signature: def cog_help_format(ctx : commands.Context, cog : commands.Cog) -> discord.Embed: Parameters: ctx : A commands.Context . cog : A commands.Cog to display. command_help_format Return an embed that display a command's help. If the command has subcommands, it'll display as a brief section. The method is responsible for the display of a command's help. Full signature: def command_help_format(ctx : commands.Context, command : commands.Command) -> discord.Embed: Parameters: ctx : A commands.Context . cog : A commands.Command to display. BigHelp A class inherited from commands.HelpCommand . The implementation of help-all command. __init__ The constructor of the class. It sets the docstring and the command's name to help-all . send_bot_help This function is a coroutine. An overridden version of HelpCommand.send_bot_help() . This is invoked when no arguments are passed to the help command. Full signature: async def send_bot_help(self, mapping): send_cog_help This function is a coroutine. An overridden version of HelpCommand.send_cog_help() . This is invoked when the argument passed is a commands.Cog . Full signature: async def send_cog_help(self, cog): send_group_help This function is a coroutine. An overridden version of HelpCommand.send_group_help() . This is invoked when the argument passed is a commands.Group . Full signature: async def send_group_help(self, group): send_command_help This function is a coroutine. An overridden version of HelpCommand.send_command_help() . This is invoked when the argument passed is a commands.Command . Full signature: async def send_command_help(self, command): SmallHelp A custom class that has a similar design to BigHelp . It does not inherit from commands.HelpCommand due to complex internal design of a help command of the library. The display implementation of the help command. The logic implementation of the help command is available in core.py file. __init__ The constructor of the class. It accepts a commands.Context as a general purpose argument. Full signature: def __init__(self, ctx): send_bot_help This function is a coroutine. Display a general help. This is intended to invoke when there is no argument passed in the help command. Full signature: async def send_bot_help(self): send_cog_help This function is a coroutine. Display a category's help. This is intended to invoke when the argument is a category. Full signature: async def send_cog_help(self, cog): send_command_help This function is a coroutine. Display a command's help. If there are any subcommands, it also display them briefly. This is intended to invoke when the argument is a command or a subcommand. Full signature: async def send_command_help(self, command): This document is last updated on Feb 20th (PT) by MikeJollie#1067","title":"Help"},{"location":"template/help/#help-template","text":"This is a template for the help command. It is used in help and help-all . Between help and help-all , help-all is automatically handled by the library, while help is a custom command that copies the behavior of help-all .","title":"Help template"},{"location":"template/help/#table-of-contents","text":"cog_help_format command_help_format BigHelp __init__ send_bot_help send_cog_help send_group_help send_command_help SmallHelp __init__ send_bot_help send_cog_help send_command_help","title":"Table of Contents"},{"location":"template/help/#cog_help_format","text":"Return an embed that display a category's help. The method is responsible for the display of a category's help. Full signature: def cog_help_format(ctx : commands.Context, cog : commands.Cog) -> discord.Embed: Parameters: ctx : A commands.Context . cog : A commands.Cog to display.","title":"cog_help_format"},{"location":"template/help/#command_help_format","text":"Return an embed that display a command's help. If the command has subcommands, it'll display as a brief section. The method is responsible for the display of a command's help. Full signature: def command_help_format(ctx : commands.Context, command : commands.Command) -> discord.Embed: Parameters: ctx : A commands.Context . cog : A commands.Command to display.","title":"command_help_format"},{"location":"template/help/#bighelp","text":"A class inherited from commands.HelpCommand . The implementation of help-all command.","title":"BigHelp"},{"location":"template/help/#__init__","text":"The constructor of the class. It sets the docstring and the command's name to help-all .","title":"__init__"},{"location":"template/help/#send_bot_help","text":"This function is a coroutine. An overridden version of HelpCommand.send_bot_help() . This is invoked when no arguments are passed to the help command. Full signature: async def send_bot_help(self, mapping):","title":"send_bot_help"},{"location":"template/help/#send_cog_help","text":"This function is a coroutine. An overridden version of HelpCommand.send_cog_help() . This is invoked when the argument passed is a commands.Cog . Full signature: async def send_cog_help(self, cog):","title":"send_cog_help"},{"location":"template/help/#send_group_help","text":"This function is a coroutine. An overridden version of HelpCommand.send_group_help() . This is invoked when the argument passed is a commands.Group . Full signature: async def send_group_help(self, group):","title":"send_group_help"},{"location":"template/help/#send_command_help","text":"This function is a coroutine. An overridden version of HelpCommand.send_command_help() . This is invoked when the argument passed is a commands.Command . Full signature: async def send_command_help(self, command):","title":"send_command_help"},{"location":"template/help/#smallhelp","text":"A custom class that has a similar design to BigHelp . It does not inherit from commands.HelpCommand due to complex internal design of a help command of the library. The display implementation of the help command. The logic implementation of the help command is available in core.py file.","title":"SmallHelp"},{"location":"template/help/#__init___1","text":"The constructor of the class. It accepts a commands.Context as a general purpose argument. Full signature: def __init__(self, ctx):","title":"__init__"},{"location":"template/help/#send_bot_help_1","text":"This function is a coroutine. Display a general help. This is intended to invoke when there is no argument passed in the help command. Full signature: async def send_bot_help(self):","title":"send_bot_help"},{"location":"template/help/#send_cog_help_1","text":"This function is a coroutine. Display a category's help. This is intended to invoke when the argument is a category. Full signature: async def send_cog_help(self, cog):","title":"send_cog_help"},{"location":"template/help/#send_command_help_1","text":"This function is a coroutine. Display a command's help. If there are any subcommands, it also display them briefly. This is intended to invoke when the argument is a command or a subcommand. Full signature: async def send_command_help(self, command): This document is last updated on Feb 20th (PT) by MikeJollie#1067","title":"send_command_help"},{"location":"template/menu/","text":"Menu template This is a template for a menu-like control in Discord. It uses reactions to go into a section. This is used in various commands and functions, notably in help . Table of Contents Menu __init__ add_page add_pages event Menu The implementation class for the menu structure. Internally, it contains a dictionary in the following format: {'emoji': embed} . __init__ The constructor of the class. It sets the starting page, the terminate emoji and the return-to-start-page emoji. Full signature: def __init__(self, init_page : discord.Embed, terminate_emoji : str, return_emoji : str): Parameters: init_page : The center page. terminate_emoji : An emoji used to exit the menu. return_emoji : An emoji used to exit small branch back to the center page. The emoji parameters should NOT be the same (currently no check for this). Exception: TypeError : Raises when init_page is not a discord.Embed . add_page Add a page to the menu. Full signature: def add_page(self, emoji : str, page : discord.Embed): Parameters: emoji : The unique emoji that identifies the page. page : The page. Exceptions: IndexError : Raises when emoji is the same as the terminate emoji. TypeError : Raises when page is not a discord.Embed . add_pages Add multiple pages to the menu. Full signature: def add_pages(self, pages : typing.Dict[str, discord.Embed]): Parameter: pages : A dict that has the format {'emoji': page} . Exceptions: See Exceptions . event This function is a coroutine. A function used to interact with the menu. This will fire up the menu and manage it until timeout (which is 2 minutes of inactivity). Full signature: async def event(self, ctx : commands.Context, channel : discord.TextChannel = None, interupt = True): Parameters: ctx : The context. channel : The channel you want to send the menu in. If none provided, it'll use ctx.channel . interupt : False if you don't want other user to react the menu, True otherwise. Default value is True , although it is recommended to False . Exceptions: AttributeError : Raises when the parameter(s) is wrong type. discord.Forbidden : Raises when the bot doesn't have permission to send messages/add reactions/read messages history. This document is last updated on Feb 20th (PT) by MikeJollie#1067","title":"Menu"},{"location":"template/menu/#menu-template","text":"This is a template for a menu-like control in Discord. It uses reactions to go into a section. This is used in various commands and functions, notably in help .","title":"Menu template"},{"location":"template/menu/#table-of-contents","text":"Menu __init__ add_page add_pages event","title":"Table of Contents"},{"location":"template/menu/#menu","text":"The implementation class for the menu structure. Internally, it contains a dictionary in the following format: {'emoji': embed} .","title":"Menu"},{"location":"template/menu/#__init__","text":"The constructor of the class. It sets the starting page, the terminate emoji and the return-to-start-page emoji. Full signature: def __init__(self, init_page : discord.Embed, terminate_emoji : str, return_emoji : str): Parameters: init_page : The center page. terminate_emoji : An emoji used to exit the menu. return_emoji : An emoji used to exit small branch back to the center page. The emoji parameters should NOT be the same (currently no check for this). Exception: TypeError : Raises when init_page is not a discord.Embed .","title":"__init__"},{"location":"template/menu/#add_page","text":"Add a page to the menu. Full signature: def add_page(self, emoji : str, page : discord.Embed): Parameters: emoji : The unique emoji that identifies the page. page : The page. Exceptions: IndexError : Raises when emoji is the same as the terminate emoji. TypeError : Raises when page is not a discord.Embed .","title":"add_page"},{"location":"template/menu/#add_pages","text":"Add multiple pages to the menu. Full signature: def add_pages(self, pages : typing.Dict[str, discord.Embed]): Parameter: pages : A dict that has the format {'emoji': page} . Exceptions: See Exceptions .","title":"add_pages"},{"location":"template/menu/#event","text":"This function is a coroutine. A function used to interact with the menu. This will fire up the menu and manage it until timeout (which is 2 minutes of inactivity). Full signature: async def event(self, ctx : commands.Context, channel : discord.TextChannel = None, interupt = True): Parameters: ctx : The context. channel : The channel you want to send the menu in. If none provided, it'll use ctx.channel . interupt : False if you don't want other user to react the menu, True otherwise. Default value is True , although it is recommended to False . Exceptions: AttributeError : Raises when the parameter(s) is wrong type. discord.Forbidden : Raises when the bot doesn't have permission to send messages/add reactions/read messages history. This document is last updated on Feb 20th (PT) by MikeJollie#1067","title":"event"},{"location":"template/paginator/","text":"Pages template This is a template for a paginator-like control in Discord. It uses reactions to move on to the next or previous pages. This is used in various commands, notably in help , nhentai , etc. Table of Contents Pages __init__ add_page event Pages The implementation class for the paginator structure. Internally, it contains a list of embeds. __init__ The constructor of the class. It sets the initial page. Full signature: def __init__(self, init_page = 0): Parameter: init_page : The starting index. add_page Add a page into the paginator. Full signature: def add_page(self, page : discord.Embed): Parameter: page : The page. Exception: TypeError : Raises when page is not a discord.Embed . event This function is a coroutine. A function used to interact with the paginator. This will fire up the paginator and manage it until timeout (which is 2 minutes of inactivity). Full signature: async def event(self, ctx : commands.Context, channel : discord.TextChannel = None, interupt = True): Parameters: ctx : The context. channel : The channel you want the pages to be sent. If none provided, it'll use ctx.channel . interupt : False if you don't want other user to react the paginator, True otherwise. Default value is True . Exception: AttributeError : Raises when the parameter(s) is wrong type. discord.Forbidden : Raises when the bot doesn't have permissions to send messages/add reactions/read message history. This document is last updated on Feb 20th (PT) by MikeJollie#1067","title":"Paginator"},{"location":"template/paginator/#pages-template","text":"This is a template for a paginator-like control in Discord. It uses reactions to move on to the next or previous pages. This is used in various commands, notably in help , nhentai , etc.","title":"Pages template"},{"location":"template/paginator/#table-of-contents","text":"Pages __init__ add_page event","title":"Table of Contents"},{"location":"template/paginator/#pages","text":"The implementation class for the paginator structure. Internally, it contains a list of embeds.","title":"Pages"},{"location":"template/paginator/#__init__","text":"The constructor of the class. It sets the initial page. Full signature: def __init__(self, init_page = 0): Parameter: init_page : The starting index.","title":"__init__"},{"location":"template/paginator/#add_page","text":"Add a page into the paginator. Full signature: def add_page(self, page : discord.Embed): Parameter: page : The page. Exception: TypeError : Raises when page is not a discord.Embed .","title":"add_page"},{"location":"template/paginator/#event","text":"This function is a coroutine. A function used to interact with the paginator. This will fire up the paginator and manage it until timeout (which is 2 minutes of inactivity). Full signature: async def event(self, ctx : commands.Context, channel : discord.TextChannel = None, interupt = True): Parameters: ctx : The context. channel : The channel you want the pages to be sent. If none provided, it'll use ctx.channel . interupt : False if you don't want other user to react the paginator, True otherwise. Default value is True . Exception: AttributeError : Raises when the parameter(s) is wrong type. discord.Forbidden : Raises when the bot doesn't have permissions to send messages/add reactions/read message history. This document is last updated on Feb 20th (PT) by MikeJollie#1067","title":"event"},{"location":"utilities/db/","text":"Database methods [DEVELOPING] This section is labeled as [DEVELOPING], which means the function/command is currently under development and not available for testing.","title":"Database methods"},{"location":"utilities/db/#database-methods-developing","text":"This section is labeled as [DEVELOPING], which means the function/command is currently under development and not available for testing.","title":"Database methods [DEVELOPING]"},{"location":"utilities/facility/","text":"Utility methods These are functions that helps with several tasks. Table of Contents get_config This function is a coroutine. Return a guild's information as a dict . The resultant dictionary has a special key called ERROR which indicates whether or not the dictionary is good to use. 0 is good. It is NOT recommended to add/remove any keys from this dictionary. Full signature: async def get_config(bot, guild_id) -> dict: Parameters: bot : A commands.Bot instance that has a pool attribute. guild_id : The guild's id. save_config This function is a coroutine. Save the configuration of the guild. This function is a temporary version of a DB.Guild.bulk_update() method. Full signature: async def save_config(bot, config) -> None: Parameters: bot : A commands.Bot instance that has a pool attribute. config : A dictionary. This dictionary should always be previously returned from get_config() . calculate Calculate a simple mathematic expression and return the result as a str . This is currently used only in the calc command. Full signature: def calculate(expression : str) -> str: Parameter: expression : The mathematic expression. Return: The result of the expression. If a ZeroDivisionError is raised, it'll return Infinity/Undefined . If an Exception is raised, it'll return Error . convert_roleperms_dpy_discord Convert a role permission string from discord.py to what it looks like in Discord. Full signature: def convert_roleperms_dpy_discord(role_permissions : str) -> str: Parameter: role_permissions : The role permission. Example: convert_roleperms_dpy_discord(\"create_instant_invite\") -> \"Create Invite\" convert_channelperms_dpy_discord Convert a channel permission string from discord.py to what it looks like in Discord. Full signature: def convert_channelperms_dpy_discord(channel_permissions : str) -> str: Parameter: channel_permissions : The channel permission. Example: convert_channelperms_dpy_discord(\"external_emojis\") -> \"Use External Emojis\" clean_signature Automatically convert a command's signature into a more friendly version to display in the Usage section of a help command. The command's signature is obtained using the signature attribute. Variables should be named carefully: a_variable will be a variable . a__variable will be a/variable . Full signature: def clean_signature(command_signature : str) -> str: format_time Convert a datetime.timedelta to a nice string. This only converts up to seconds. For possible milliseconds values, don't use this. Full signature: def format_time(time : datetime.timedelta, options = {}) -> str: Parameters: time : A datetime.timedelta . options : An optional dict to configure the string. Possible options are: include_seconds : Whether or not to include seconds in the string. Default to False . include_zeroes : Whether or not to include 0 parts in the string. Default to True . With False , it'll return 7 minutes instead of 0 days 0 hours 7 minutes 0 seconds . get_default_embed Generate a \"default\" embed with footer and the time. Note that for logging, you should overwrite the footer to something else. It is default to Requested by Full signature: def get_default_embed(title : str = \"\", url : str = \"\", description : str = \"\", color : discord.Color = discord.Color.green(), timestamp : datetime.datetime = datetime.datetime.utcnow(), author : discord.User = None) -> discord.Embed: Parameters: timestamp : the timestamp, usually utcnow() . The default value is there just to make the parameters look good, you still have to provide it. author : optional discord.User or discord.Member to set to the footer. If not provided, it won't set the footer. title : optional title. url : optional url for the title. description : optional description. Internally it'll remove the tabs. color : optional color, default to green. Return type: discord.Embed or None on failure. mention A utility function that returns a mention string to be used. The only reason this function exists is because discord.Role.mention being retarded when the role is @everyone . In that case, the function will return directly @everyone , not @@everyone . Otherwise, the function just simply return object.mention . Because of this, you can use the default .mention (recommended) unless it's a discord.Role . Note that if there's a custom role that's literally named @everyone then this function will return @everyone , not @@everyone . Full signature: def mention(discord_object : discord.Object) -> str: Parameter: discord_object : A Discord Object that is mentionable, including discord.abc.User , discord.abc.GuildChannel and discord.Role . Return: The string used to mention the object. If the parameter's type does not satisfy the above requirements, it returns empty string. striplist Turn a list of objects into a string. Full signature: def striplist(array : typing.Union[list, numpy.ndarray]) -> str: Parameter: array : A list of objects. Return: A string, or None if array is empty. This document is last updated on Feb 20th (PT) by MikeJollie#1067","title":"Utility methods"},{"location":"utilities/facility/#utility-methods","text":"These are functions that helps with several tasks.","title":"Utility methods"},{"location":"utilities/facility/#table-of-contents","text":"","title":"Table of Contents"},{"location":"utilities/facility/#get_config","text":"This function is a coroutine. Return a guild's information as a dict . The resultant dictionary has a special key called ERROR which indicates whether or not the dictionary is good to use. 0 is good. It is NOT recommended to add/remove any keys from this dictionary. Full signature: async def get_config(bot, guild_id) -> dict: Parameters: bot : A commands.Bot instance that has a pool attribute. guild_id : The guild's id.","title":"get_config"},{"location":"utilities/facility/#save_config","text":"This function is a coroutine. Save the configuration of the guild. This function is a temporary version of a DB.Guild.bulk_update() method. Full signature: async def save_config(bot, config) -> None: Parameters: bot : A commands.Bot instance that has a pool attribute. config : A dictionary. This dictionary should always be previously returned from get_config() .","title":"save_config"},{"location":"utilities/facility/#calculate","text":"Calculate a simple mathematic expression and return the result as a str . This is currently used only in the calc command. Full signature: def calculate(expression : str) -> str: Parameter: expression : The mathematic expression. Return: The result of the expression. If a ZeroDivisionError is raised, it'll return Infinity/Undefined . If an Exception is raised, it'll return Error .","title":"calculate"},{"location":"utilities/facility/#convert_roleperms_dpy_discord","text":"Convert a role permission string from discord.py to what it looks like in Discord. Full signature: def convert_roleperms_dpy_discord(role_permissions : str) -> str: Parameter: role_permissions : The role permission. Example: convert_roleperms_dpy_discord(\"create_instant_invite\") -> \"Create Invite\"","title":"convert_roleperms_dpy_discord"},{"location":"utilities/facility/#convert_channelperms_dpy_discord","text":"Convert a channel permission string from discord.py to what it looks like in Discord. Full signature: def convert_channelperms_dpy_discord(channel_permissions : str) -> str: Parameter: channel_permissions : The channel permission. Example: convert_channelperms_dpy_discord(\"external_emojis\") -> \"Use External Emojis\"","title":"convert_channelperms_dpy_discord"},{"location":"utilities/facility/#clean_signature","text":"Automatically convert a command's signature into a more friendly version to display in the Usage section of a help command. The command's signature is obtained using the signature attribute. Variables should be named carefully: a_variable will be a variable . a__variable will be a/variable . Full signature: def clean_signature(command_signature : str) -> str:","title":"clean_signature"},{"location":"utilities/facility/#format_time","text":"Convert a datetime.timedelta to a nice string. This only converts up to seconds. For possible milliseconds values, don't use this. Full signature: def format_time(time : datetime.timedelta, options = {}) -> str: Parameters: time : A datetime.timedelta . options : An optional dict to configure the string. Possible options are: include_seconds : Whether or not to include seconds in the string. Default to False . include_zeroes : Whether or not to include 0 parts in the string. Default to True . With False , it'll return 7 minutes instead of 0 days 0 hours 7 minutes 0 seconds .","title":"format_time"},{"location":"utilities/facility/#get_default_embed","text":"Generate a \"default\" embed with footer and the time. Note that for logging, you should overwrite the footer to something else. It is default to Requested by Full signature: def get_default_embed(title : str = \"\", url : str = \"\", description : str = \"\", color : discord.Color = discord.Color.green(), timestamp : datetime.datetime = datetime.datetime.utcnow(), author : discord.User = None) -> discord.Embed: Parameters: timestamp : the timestamp, usually utcnow() . The default value is there just to make the parameters look good, you still have to provide it. author : optional discord.User or discord.Member to set to the footer. If not provided, it won't set the footer. title : optional title. url : optional url for the title. description : optional description. Internally it'll remove the tabs. color : optional color, default to green. Return type: discord.Embed or None on failure.","title":"get_default_embed"},{"location":"utilities/facility/#mention","text":"A utility function that returns a mention string to be used. The only reason this function exists is because discord.Role.mention being retarded when the role is @everyone . In that case, the function will return directly @everyone , not @@everyone . Otherwise, the function just simply return object.mention . Because of this, you can use the default .mention (recommended) unless it's a discord.Role . Note that if there's a custom role that's literally named @everyone then this function will return @everyone , not @@everyone . Full signature: def mention(discord_object : discord.Object) -> str: Parameter: discord_object : A Discord Object that is mentionable, including discord.abc.User , discord.abc.GuildChannel and discord.Role . Return: The string used to mention the object. If the parameter's type does not satisfy the above requirements, it returns empty string.","title":"mention"},{"location":"utilities/facility/#striplist","text":"Turn a list of objects into a string. Full signature: def striplist(array : typing.Union[list, numpy.ndarray]) -> str: Parameter: array : A list of objects. Return: A string, or None if array is empty. This document is last updated on Feb 20th (PT) by MikeJollie#1067","title":"striplist"}]}